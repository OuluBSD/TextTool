{
	"saved_hash": "9dd2ba783bcf1a55ca5265fddaaa467c6ea825f8",
	"files": [
		{
			"key": "main.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "WIN32_LEAN_AND_MEAN",
						"t": "",
						"i": "WIN32_LEAN_AND_MEAN",
						"r": "WIN32_LEAN_AND_MEAN",
						"s": "",
						"u": "WIN32_LEAN_AND_MEAN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bea664f8a77804ab3dc1ff0ebd1762f9028b42da"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "NOMINMAX",
						"t": "",
						"i": "NOMINMAX",
						"r": "NOMINMAX",
						"s": "",
						"u": "NOMINMAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55eaf1246c782d6421d1b3ae538021e9cbac20fd"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "g_ctx",
						"t": "llama_context **",
						"i": "g_ctx",
						"r": "static llama_context **g_ctx",
						"s": "",
						"u": "G_CTX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad04d1b4ffe7f6eab93df603e9cf0b871ff51801"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "g_model",
						"t": "llama_model **",
						"i": "g_model",
						"r": "static llama_model **g_model",
						"s": "",
						"u": "G_MODEL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c17cbd1be8c6094d0fac9e7b71dc1376b89af60c"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "g_params",
						"t": "gpt_params *",
						"i": "g_params",
						"r": "static gpt_params *g_params",
						"s": "",
						"u": "G_PARAMS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b13054b0b2c0ead0e9520072b713b9fa56ca8a26"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "g_input_tokens",
						"t": "int *",
						"i": "g_input_tokens",
						"r": "static int *g_input_tokens",
						"s": "",
						"u": "G_INPUT_TOKENS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "310b0a7b1c4b60485b52fa4d67f1d9fb1ae7dd09"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "g_output_ss",
						"t": "std::ostringstream *",
						"i": "g_output_ss",
						"r": "static std::ostringstream *g_output_ss",
						"s": "",
						"u": "G_OUTPUT_SS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "42e2692018853dc70bb2236d698b5d2115c33af4"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "g_output_tokens",
						"t": "int *",
						"i": "g_output_tokens",
						"r": "static int *g_output_tokens",
						"s": "",
						"u": "G_OUTPUT_TOKENS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "00da21d335039be2710a82402bab131363bb0090"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "is_interacting",
						"t": "bool",
						"i": "is_interacting",
						"r": "static bool is_interacting",
						"s": "",
						"u": "IS_INTERACTING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0083baa39b04773866154cdbf58d81e4a92a9921"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "file_exists",
						"t": "bool (const std::string &)",
						"i": "file_exists(const std::string&)",
						"r": "static bool file_exists(const std::string& path)",
						"s": "",
						"u": "FILE_EXISTS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "255cf220457e95d3c908442e1fc990be674e7570"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "file_is_empty",
						"t": "bool (const std::string &)",
						"i": "file_is_empty(const std::string&)",
						"r": "static bool file_is_empty(const std::string& path)",
						"s": "",
						"u": "FILE_IS_EMPTY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ccffc791c86b7ce75743f47bfa9e9a2ce20fb00"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "write_logfile",
						"t": "void (const llama_context *, const gpt_params &, const llama_model *, const int &, const std::string &, const int &)",
						"i": "LlamaCppResponse::write_logfile(const llama_context*,const gpt_params&,const llama_model*,const int&,const std::string&,const int&)",
						"r": "void write_logfile(const llama_context *ctx, const gpt_params& params, const llama_model *model, const int& input_tokens, const std::string& output, const int& output_tokens)",
						"s": "",
						"u": "WRITE_LOGFILE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09f02b3d9dcdb8735a771cc577ff367aa883599e"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sigint_handler",
						"t": "void (int)",
						"i": "LlamaCppResponse::sigint_handler(int)",
						"r": "void sigint_handler(int signo)",
						"s": "",
						"u": "SIGINT_HANDLER",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "799d59b8e9438ad35d5e07df2b8f76b3ffbf468a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_log_callback_logTee",
						"t": "void (int, const char *, void *)",
						"i": "llama_log_callback_logTee(int,const char*,void*)",
						"r": "void llama_log_callback_logTee(int level, const char *text, void *user_data)",
						"s": "",
						"u": "LLAMA_LOG_CALLBACK_LOGTEE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4bc4e9c2d307deb6b740c94d449d6f229d1838b6"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Process",
						"t": "int ()",
						"i": "LlamaCppResponse::Process()",
						"r": "int Process()",
						"s": "",
						"u": "PROCESS",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "22f304b9896dec5b484a29fe3647227cef637a40"
							}
						]
					}
				]
			}
		},
		{
			"key": "console.h",
			"value": {
				"items": [
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "display_t",
						"t": "console::display_t",
						"i": "console::display_t",
						"r": "enum display_t",
						"s": "console",
						"u": "DISPLAY_T",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad2e3c9b55a279c5fe318940db07bb190063c28c"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "reset",
						"t": "console::display_t",
						"i": "console::reset",
						"r": "reset",
						"s": "console",
						"u": "RESET",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d2e0d8d276c7abd1e53fa2bfea6b29d5cb86dc63"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prompt",
						"t": "console::display_t",
						"i": "console::prompt",
						"r": "prompt",
						"s": "console",
						"u": "PROMPT",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c7e05e5868afcf303ae4d1b7982921411378f96"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "user_input",
						"t": "console::display_t",
						"i": "console::user_input",
						"r": "user_input",
						"s": "console",
						"u": "USER_INPUT",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "64aa01c74a47ea04ee19f0b93a9e36a4084e6741"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "error",
						"t": "console::display_t",
						"i": "console::error",
						"r": "error",
						"s": "console",
						"u": "ERROR",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11f9578d05e6f7bb58a3cdd00107e9f4e3882671"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "init",
						"t": "void (bool, bool)",
						"i": "console::init(bool,bool)",
						"r": "void init(bool use_simple_io, bool use_advanced_display)",
						"s": "console",
						"u": "INIT",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "339eeb36e1d5d2859feb38826384950bdbc1546c"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "cleanup",
						"t": "void ()",
						"i": "console::cleanup()",
						"r": "void cleanup()",
						"s": "console",
						"u": "CLEANUP",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e8b65462b6eb073a862d1e9365557c3f31cb6e4"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "set_display",
						"t": "void (display_t)",
						"i": "console::set_display(display_t)",
						"r": "void set_display(display_t display)",
						"s": "console",
						"u": "SET_DISPLAY",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17cc09662409224a42754ebf8e98a1d5d9215290"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "readline",
						"t": "bool (std::string &, bool)",
						"i": "console::readline(std::string&,bool)",
						"r": "bool readline(std::string& line, bool multiline_input)",
						"s": "console",
						"u": "READLINE",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ff2952cd1a23ee2a784ec49668fe6641d752a43"
							}
						]
					}
				]
			}
		},
		{
			"key": "LlamaCpp.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "_LlamaCpp_LlamaCpp_h_",
						"t": "",
						"i": "_LlamaCpp_LlamaCpp_h_",
						"r": "_LlamaCpp_LlamaCpp_h_",
						"s": "",
						"u": "_LLAMACPP_LLAMACPP_H_",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89fdeab79f0101ff05b5425cc6dd59779ab4d4aa"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_model",
						"t": "llama_model",
						"i": "llama_model",
						"r": "llama_model",
						"s": "",
						"u": "LLAMA_MODEL",
						"q": "llama_model",
						"w": "LLAMA_MODEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60f601c935bd458292ea1366eaa0a58bc601be2c"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_context",
						"t": "llama_context",
						"i": "llama_context",
						"r": "llama_context",
						"s": "",
						"u": "LLAMA_CONTEXT",
						"q": "llama_context",
						"w": "LLAMA_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e135deb3c12b9d675f3e6fa8c999cf2800b63b8"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "gpt_params",
						"t": "gpt_params",
						"i": "gpt_params",
						"r": "gpt_params",
						"s": "",
						"u": "GPT_PARAMS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "37e6aa9ec187c114c495e6cb3caead3f8bc5e9aa"
							}
						]
					},
					{
						"k": 4,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LlamaCppResponse",
						"t": "LlamaCppResponse",
						"i": "LlamaCppResponse",
						"r": "LlamaCppResponse",
						"s": "",
						"u": "LLAMACPPRESPONSE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "050b1d2c70d795f9d71c6d5daba65e95e52baaf4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "model",
						"t": "String",
						"i": "LlamaCppResponse::model",
						"r": "String model",
						"s": "",
						"u": "MODEL",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d668957afe0354522e26c0f292a83e84a429077d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "line_tmp",
						"t": "String",
						"i": "LlamaCppResponse::line_tmp",
						"r": "String line_tmp",
						"s": "",
						"u": "LINE_TMP",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3df3c9c88cd83ef480a885ae45fa5112ac0374b0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "full_log",
						"t": "String",
						"i": "LlamaCppResponse::full_log",
						"r": "String full_log",
						"s": "",
						"u": "FULL_LOG",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1bfff77b67f9f13777ef88bc1f2246c33251358f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prompt",
						"t": "String",
						"i": "LlamaCppResponse::prompt",
						"r": "String prompt",
						"s": "",
						"u": "PROMPT",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3722a73d23e3bdb59c9d91d93e6487d5604d0f71"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "output",
						"t": "String",
						"i": "LlamaCppResponse::output",
						"r": "String output",
						"s": "",
						"u": "OUTPUT",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d32534e59bd43434a5a14ff8a5433889438a5fac"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "context_size",
						"t": "int",
						"i": "LlamaCppResponse::context_size",
						"r": "int context_size",
						"s": "",
						"u": "CONTEXT_SIZE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b8bd9f8ee60e92d8d31eebe6443e75f3bc49d2b5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_predict",
						"t": "int",
						"i": "LlamaCppResponse::n_predict",
						"r": "int n_predict",
						"s": "",
						"u": "N_PREDICT",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "86d26f0a6e6825a05585089e57e20dabe1dfff7c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_threads",
						"t": "int",
						"i": "LlamaCppResponse::n_threads",
						"r": "int n_threads",
						"s": "",
						"u": "N_THREADS",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c6ec74ffa9c7ddc7cfb78d51e5b4b34d95eff862"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_gpu_layers",
						"t": "int",
						"i": "LlamaCppResponse::n_gpu_layers",
						"r": "int n_gpu_layers",
						"s": "",
						"u": "N_GPU_LAYERS",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a22dbaf95f63c1a87d8d73443f02eafe481d50a1"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_sample",
						"t": "int (struct llama_sampling_context *, struct llama_context *, struct llama_context *, int)",
						"i": "LlamaCppResponse::llama_sampling_sample(llama_sampling_context*,llama_context*,llama_context*,int)",
						"r": "int llama_sampling_sample(llama_sampling_context *ctx_sampling, llama_context *ctx_main, llama_context *ctx_cfg, int idx = 0)",
						"s": "",
						"u": "LLAMA_SAMPLING_SAMPLE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b40eb1f47d90886c9e9a5caa5927608a8ea0a6ac"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_sample_impl",
						"t": "int (struct llama_sampling_context *, struct llama_context *, struct llama_context *, const int, bool)",
						"i": "LlamaCppResponse::llama_sampling_sample_impl(llama_sampling_context*,llama_context*,llama_context*,const int,bool)",
						"r": "int llama_sampling_sample_impl(llama_sampling_context *ctx_sampling, llama_context *ctx_main, llama_context *ctx_cfg, const int idx, bool is_resampling)",
						"s": "",
						"u": "LLAMA_SAMPLING_SAMPLE_IMPL",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a1211eea4e614389015b40da88176678a3e04eb"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "write_logfile",
						"t": "void (const llama_context *, const gpt_params &, const llama_model *, const int &, const std::string &, const int &)",
						"i": "LlamaCppResponse::write_logfile(const llama_context*,const gpt_params&,const llama_model*,const int&,const std::string&,const int&)",
						"r": "void write_logfile(const llama_context *ctx, const gpt_params& params, const llama_model *model, const int& input_tokens, const std::string& output, const int& output_tokens)",
						"s": "",
						"u": "WRITE_LOGFILE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08d08f962f75e1e0a62bbc609b3f570b46ce7fda"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "sigint_handler",
						"t": "void (int)",
						"i": "LlamaCppResponse::sigint_handler(int)",
						"r": "void sigint_handler(int signo)",
						"s": "",
						"u": "SIGINT_HANDLER",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e7a086a2fc0cb8202206ba9a43aa44c37c5f9111"
							}
						]
					},
					{
						"k": 24,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LlamaCppResponse",
						"t": "void ()",
						"i": "LlamaCppResponse::LlamaCppResponse()",
						"r": "LlamaCppResponse()",
						"s": "",
						"u": "LLAMACPPRESPONSE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87e411492496747cdbb9efd935f7742238ba3cf7"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetPrompt",
						"t": "void (String)",
						"i": "LlamaCppResponse::SetPrompt(String)",
						"r": "void SetPrompt(String s)",
						"s": "",
						"u": "SETPROMPT",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a94c8aa2a0578a63a7b5365bd3d4c3bbe765eebd"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetModel",
						"t": "void (String)",
						"i": "LlamaCppResponse::SetModel(String)",
						"r": "void SetModel(String s)",
						"s": "",
						"u": "SETMODEL",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a92d158d43991ef20944b06a3c0d30957f359f33"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetMaxTokens",
						"t": "void (int)",
						"i": "LlamaCppResponse::SetMaxTokens(int)",
						"r": "void SetMaxTokens(int n)",
						"s": "",
						"u": "SETMAXTOKENS",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9395e6c366b808abce6699cfa5b1544faffb4e4a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetGpuLayers",
						"t": "void (int)",
						"i": "LlamaCppResponse::SetGpuLayers(int)",
						"r": "void SetGpuLayers(int n)",
						"s": "",
						"u": "SETGPULAYERS",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0302466a515893d766c710fb3b07c382dc066572"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetContextSize",
						"t": "void (int)",
						"i": "LlamaCppResponse::SetContextSize(int)",
						"r": "void SetContextSize(int n)",
						"s": "",
						"u": "SETCONTEXTSIZE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "309d3583572e24829daa6f1b87ea819479903b95"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "SetThreadCount",
						"t": "void (int)",
						"i": "LlamaCppResponse::SetThreadCount(int)",
						"r": "void SetThreadCount(int n = -1)",
						"s": "",
						"u": "SETTHREADCOUNT",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e69e9871dc239ffce8b4cb9effc8bc2858801229"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Process",
						"t": "int ()",
						"i": "LlamaCppResponse::Process()",
						"r": "int Process()",
						"s": "",
						"u": "PROCESS",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "41bfb31f27676b60d156c4227583fef497c712f5"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "Log",
						"t": "void (String)",
						"i": "LlamaCppResponse::Log(String)",
						"r": "void Log(String line)",
						"s": "",
						"u": "LOG",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "033a483133e784722966d45a5b818e246bfa095f"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LogLine",
						"t": "void (String)",
						"i": "LlamaCppResponse::LogLine(String)",
						"r": "void LogLine(String line)",
						"s": "",
						"u": "LOGLINE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9efaa346f03b82ce716845dbc364c45dcadda85"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetLog",
						"t": "const String &() const",
						"i": "LlamaCppResponse::GetLog()const",
						"r": "const String& GetLog() const",
						"s": "",
						"u": "GETLOG",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01a2573ad5f5d8b555fbd5f2fb7dadfec06c10d2"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "GetOutput",
						"t": "const String &() const",
						"i": "LlamaCppResponse::GetOutput()const",
						"r": "const String& GetOutput() const",
						"s": "",
						"u": "GETOUTPUT",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "adda52ca3df640b3e21c4741eb3e124461dafe59"
							}
						]
					}
				]
			}
		},
		{
			"key": "common.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_NO_FILE_LINE_FUNCTION",
						"t": "",
						"i": "LOG_NO_FILE_LINE_FUNCTION",
						"r": "LOG_NO_FILE_LINE_FUNCTION",
						"s": "",
						"u": "LOG_NO_FILE_LINE_FUNCTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a7df3276b954d00e60a5dd81730d0a6dc8289ad"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "DIRECTORY_SEPARATOR",
						"t": "",
						"i": "DIRECTORY_SEPARATOR",
						"r": "DIRECTORY_SEPARATOR",
						"s": "",
						"u": "DIRECTORY_SEPARATOR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb5793877655e647336563d27d3c11f3e7f27a28"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "die",
						"t": "",
						"i": "die",
						"r": "die",
						"s": "",
						"u": "DIE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "209720c66f34033f11d7087566fa4880d11655d9"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": true,
						"n": "die_fmt",
						"t": "",
						"i": "die_fmt",
						"r": "die_fmt",
						"s": "",
						"u": "DIE_FMT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fbaf5d33c49341daa815dbfabdafe1e0b6f6c208"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "print_build_info",
						"t": "",
						"i": "print_build_info",
						"r": "print_build_info",
						"s": "",
						"u": "PRINT_BUILD_INFO",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7f51a2b8d4e328f96a7a4559adfe343bc75a5510"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LLAMA_BUILD_NUMBER",
						"t": "int",
						"i": "LLAMA_BUILD_NUMBER",
						"r": "int LLAMA_BUILD_NUMBER",
						"s": "",
						"u": "LLAMA_BUILD_NUMBER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ad412a13cade37b1389b4de436c331666f93a9e"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LLAMA_COMMIT",
						"t": "const char *",
						"i": "LLAMA_COMMIT",
						"r": "const char *LLAMA_COMMIT",
						"s": "",
						"u": "LLAMA_COMMIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3af878919ffa3a554da253ac52b2b9ef0d4e7c44"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LLAMA_COMPILER",
						"t": "const char *",
						"i": "LLAMA_COMPILER",
						"r": "const char *LLAMA_COMPILER",
						"s": "",
						"u": "LLAMA_COMPILER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d5e77437af21d43d7823a4117c489e48cd8c6c5"
							}
						]
					},
					{
						"k": 9,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LLAMA_BUILD_TARGET",
						"t": "const char *",
						"i": "LLAMA_BUILD_TARGET",
						"r": "const char *LLAMA_BUILD_TARGET",
						"s": "",
						"u": "LLAMA_BUILD_TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a002894b64c8fe4d9fed95b9b8953ab54cc0fbab"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "get_num_physical_cores",
						"t": "int32_t ()",
						"i": "get_num_physical_cores()",
						"r": "int32_t get_num_physical_cores()",
						"s": "",
						"u": "GET_NUM_PHYSICAL_CORES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e51929cbde7925cc2894ba05621afec1982664b3"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "gpt_params",
						"t": "gpt_params",
						"i": "gpt_params",
						"r": "gpt_params",
						"s": "",
						"u": "GPT_PARAMS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5162b6553367a9933585911186eccb018180112f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "seed",
						"t": "uint32_t",
						"i": "gpt_params::seed",
						"r": "uint32_t seed",
						"s": "",
						"u": "SEED",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20b7792a2c4823f68aee16f40643c2bbc299850f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_threads",
						"t": "int32_t",
						"i": "gpt_params::n_threads",
						"r": "int32_t n_threads",
						"s": "",
						"u": "N_THREADS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e8c113e7c480d632d3860a8aa41350151e394c7c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_threads_draft",
						"t": "int32_t",
						"i": "gpt_params::n_threads_draft",
						"r": "int32_t n_threads_draft",
						"s": "",
						"u": "N_THREADS_DRAFT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1ef05055d62199c849627de4d642e97ebdd8328"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_threads_batch",
						"t": "int32_t",
						"i": "gpt_params::n_threads_batch",
						"r": "int32_t n_threads_batch",
						"s": "",
						"u": "N_THREADS_BATCH",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "197b3b1cd7b9c4852009cf0aafb151b0e5a70000"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_threads_batch_draft",
						"t": "int32_t",
						"i": "gpt_params::n_threads_batch_draft",
						"r": "int32_t n_threads_batch_draft",
						"s": "",
						"u": "N_THREADS_BATCH_DRAFT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "decb2d8fa5c00e373db41c4a6dda74b401328256"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_predict",
						"t": "int32_t",
						"i": "gpt_params::n_predict",
						"r": "int32_t n_predict",
						"s": "",
						"u": "N_PREDICT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "accabbdf340b82a333a3dd9d2276095ef53346a4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_ctx",
						"t": "int32_t",
						"i": "gpt_params::n_ctx",
						"r": "int32_t n_ctx",
						"s": "",
						"u": "N_CTX",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1ec97490da345ef63ade9bcde2ad37f150d1e8c9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_batch",
						"t": "int32_t",
						"i": "gpt_params::n_batch",
						"r": "int32_t n_batch",
						"s": "",
						"u": "N_BATCH",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "43f28a537b307adf0ac8597b369f3485aaae8555"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_keep",
						"t": "int32_t",
						"i": "gpt_params::n_keep",
						"r": "int32_t n_keep",
						"s": "",
						"u": "N_KEEP",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "97c636db6a0c9f427b414fd132639e2127ebddd6"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_draft",
						"t": "int32_t",
						"i": "gpt_params::n_draft",
						"r": "int32_t n_draft",
						"s": "",
						"u": "N_DRAFT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "471031c69a1192e23240d41c5d49b047cdbe48e4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_chunks",
						"t": "int32_t",
						"i": "gpt_params::n_chunks",
						"r": "int32_t n_chunks",
						"s": "",
						"u": "N_CHUNKS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0570a41968bc18ec2378f8b6ba4b4a1ea188e27b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_parallel",
						"t": "int32_t",
						"i": "gpt_params::n_parallel",
						"r": "int32_t n_parallel",
						"s": "",
						"u": "N_PARALLEL",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bea7fcfdefd61f862d39c04ef852f19f448659b9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_sequences",
						"t": "int32_t",
						"i": "gpt_params::n_sequences",
						"r": "int32_t n_sequences",
						"s": "",
						"u": "N_SEQUENCES",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3d80f86d477d785d19215b5c1c1ec1f57716256"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "p_accept",
						"t": "float",
						"i": "gpt_params::p_accept",
						"r": "float p_accept",
						"s": "",
						"u": "P_ACCEPT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "def52b714cde143f5478e653c917466ee931063c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "p_split",
						"t": "float",
						"i": "gpt_params::p_split",
						"r": "float p_split",
						"s": "",
						"u": "P_SPLIT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc971a7879e45363975195dbe1a26980743eb9e8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_gpu_layers",
						"t": "int32_t",
						"i": "gpt_params::n_gpu_layers",
						"r": "int32_t n_gpu_layers",
						"s": "",
						"u": "N_GPU_LAYERS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c783de6a356f736494e5898d6decee5de2228618"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_gpu_layers_draft",
						"t": "int32_t",
						"i": "gpt_params::n_gpu_layers_draft",
						"r": "int32_t n_gpu_layers_draft",
						"s": "",
						"u": "N_GPU_LAYERS_DRAFT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "688fa9920330a94c7056d5f7b10074b1039e68e7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "split_mode",
						"t": "int",
						"i": "gpt_params::split_mode",
						"r": "int split_mode",
						"s": "",
						"u": "SPLIT_MODE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f2141acd69e8fd2d433bb0d18cd1acf2f329885"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "main_gpu",
						"t": "int32_t",
						"i": "gpt_params::main_gpu",
						"r": "int32_t main_gpu",
						"s": "",
						"u": "MAIN_GPU",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1140eb558dfa937397a0e782f1470979c74130cc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "tensor_split",
						"t": "float[128]",
						"i": "gpt_params::tensor_split",
						"r": "float tensor_split[128]",
						"s": "",
						"u": "TENSOR_SPLIT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d00fcdafe2c7d20643605f2070958c926f0d9eb4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_beams",
						"t": "int32_t",
						"i": "gpt_params::n_beams",
						"r": "int32_t n_beams",
						"s": "",
						"u": "N_BEAMS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2a61a0f8ddc0a11d3396175906e4683c628ce7dd"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "grp_attn_n",
						"t": "int32_t",
						"i": "gpt_params::grp_attn_n",
						"r": "int32_t grp_attn_n",
						"s": "",
						"u": "GRP_ATTN_N",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45f0c11669dbbbb387b3f5d56ba4114db574db17"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "grp_attn_w",
						"t": "int32_t",
						"i": "gpt_params::grp_attn_w",
						"r": "int32_t grp_attn_w",
						"s": "",
						"u": "GRP_ATTN_W",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9f82733081a2afb5b5b1809d865258d60bdd8e7d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_print",
						"t": "int32_t",
						"i": "gpt_params::n_print",
						"r": "int32_t n_print",
						"s": "",
						"u": "N_PRINT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6e58ff67ece5009c791879bf00b6d2be37da3b36"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rope_freq_base",
						"t": "float",
						"i": "gpt_params::rope_freq_base",
						"r": "float rope_freq_base",
						"s": "",
						"u": "ROPE_FREQ_BASE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ec67a209cf08a16f20409a1c9a19362b9daa824"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rope_freq_scale",
						"t": "float",
						"i": "gpt_params::rope_freq_scale",
						"r": "float rope_freq_scale",
						"s": "",
						"u": "ROPE_FREQ_SCALE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c96a8ee30f6924c5e5f9c50684a61cc08b2c38e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "yarn_ext_factor",
						"t": "float",
						"i": "gpt_params::yarn_ext_factor",
						"r": "float yarn_ext_factor",
						"s": "",
						"u": "YARN_EXT_FACTOR",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a62c8cec9d280fbff5aa2a035622c9b349efc931"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "yarn_attn_factor",
						"t": "float",
						"i": "gpt_params::yarn_attn_factor",
						"r": "float yarn_attn_factor",
						"s": "",
						"u": "YARN_ATTN_FACTOR",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4092a776ca194ead889c3207ade6319d05adaf6f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "yarn_beta_fast",
						"t": "float",
						"i": "gpt_params::yarn_beta_fast",
						"r": "float yarn_beta_fast",
						"s": "",
						"u": "YARN_BETA_FAST",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a30eb7dffa475715c07d714245ce8578004e7a37"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "yarn_beta_slow",
						"t": "float",
						"i": "gpt_params::yarn_beta_slow",
						"r": "float yarn_beta_slow",
						"s": "",
						"u": "YARN_BETA_SLOW",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b46d5057da4a591cc8bb38a310ef604b7f28fb45"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "yarn_orig_ctx",
						"t": "int32_t",
						"i": "gpt_params::yarn_orig_ctx",
						"r": "int32_t yarn_orig_ctx",
						"s": "",
						"u": "YARN_ORIG_CTX",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c620d9e2737f8a4aa9e7e8a47fced31dcd30f95"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rope_scaling_type",
						"t": "int32_t",
						"i": "gpt_params::rope_scaling_type",
						"r": "int32_t rope_scaling_type",
						"s": "",
						"u": "ROPE_SCALING_TYPE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34dd9d017e23c905b8a932570812c43148fb8d33"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sparams",
						"t": "struct llama_sampling_params",
						"i": "gpt_params::sparams",
						"r": "llama_sampling_params sparams",
						"s": "",
						"u": "SPARAMS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2fa61aafd3f485808b66a627cf70f2c7fd5d4046"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "model",
						"t": "std::string",
						"i": "gpt_params::model",
						"r": "std::string model",
						"s": "",
						"u": "MODEL",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd2389cf6af187bb1a8cbaec3235d84a61c87404"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "model_draft",
						"t": "std::string",
						"i": "gpt_params::model_draft",
						"r": "std::string model_draft",
						"s": "",
						"u": "MODEL_DRAFT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1d577319af7bdf2f7e981292ea6e6072ac25cfed"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "model_alias",
						"t": "std::string",
						"i": "gpt_params::model_alias",
						"r": "std::string model_alias",
						"s": "",
						"u": "MODEL_ALIAS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "caf70f5efdd1fb560deec930fc10ae77f4143952"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prompt",
						"t": "std::string",
						"i": "gpt_params::prompt",
						"r": "std::string prompt",
						"s": "",
						"u": "PROMPT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8449213ed696309df00577d0d12426ebdbe72ea7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prompt_file",
						"t": "std::string",
						"i": "gpt_params::prompt_file",
						"r": "std::string prompt_file",
						"s": "",
						"u": "PROMPT_FILE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ee1f9a0b7c88b3400ecd67713ca28af19a1e862"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "path_prompt_cache",
						"t": "std::string",
						"i": "gpt_params::path_prompt_cache",
						"r": "std::string path_prompt_cache",
						"s": "",
						"u": "PATH_PROMPT_CACHE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45b62e65c3af284854663b97d1f1d71c9307aa4b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "input_prefix",
						"t": "std::string",
						"i": "gpt_params::input_prefix",
						"r": "std::string input_prefix",
						"s": "",
						"u": "INPUT_PREFIX",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "73f93e41f3d2e5223578aa13a4975d9c53786fa3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "input_suffix",
						"t": "std::string",
						"i": "gpt_params::input_suffix",
						"r": "std::string input_suffix",
						"s": "",
						"u": "INPUT_SUFFIX",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc1883164993720a9d94d9a1b07d254dba43f56a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "antiprompt",
						"t": "std::vector<std::string>",
						"i": "gpt_params::antiprompt",
						"r": "std::vector<std::string> antiprompt",
						"s": "",
						"u": "ANTIPROMPT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "872d60d0820e77e9dff1eb2d2e5b5a831d7f7d72"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logdir",
						"t": "std::string",
						"i": "gpt_params::logdir",
						"r": "std::string logdir",
						"s": "",
						"u": "LOGDIR",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8f117681528abb6ae2c74f076cd71bd37f6e0484"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logits_file",
						"t": "std::string",
						"i": "gpt_params::logits_file",
						"r": "std::string logits_file",
						"s": "",
						"u": "LOGITS_FILE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4dcfb3f55d4981438b4a7e710664b8a6a8796dc9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "kv_overrides",
						"t": "int",
						"i": "gpt_params::kv_overrides",
						"r": "int kv_overrides",
						"s": "",
						"u": "KV_OVERRIDES",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77c8c26a3052e655b13c470c8f146d141903d337"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lora_adapter",
						"t": "std::vector<std::tuple<std::string, float>>",
						"i": "gpt_params::lora_adapter",
						"r": "std::vector<std::tuple<std::string, float>> lora_adapter",
						"s": "",
						"u": "LORA_ADAPTER",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "078be854036e120ec34e40f01dd78b6813cebab5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lora_base",
						"t": "std::string",
						"i": "gpt_params::lora_base",
						"r": "std::string lora_base",
						"s": "",
						"u": "LORA_BASE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5656c7f57b6382d570729bc5d84f00c7e1e87536"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ppl_stride",
						"t": "int",
						"i": "gpt_params::ppl_stride",
						"r": "int ppl_stride",
						"s": "",
						"u": "PPL_STRIDE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f15b48c6c987c0af23d09385ae060d98d350310"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ppl_output_type",
						"t": "int",
						"i": "gpt_params::ppl_output_type",
						"r": "int ppl_output_type",
						"s": "",
						"u": "PPL_OUTPUT_TYPE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5529066be9a939b6fe170736898a166cd793bcb2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hellaswag",
						"t": "bool",
						"i": "gpt_params::hellaswag",
						"r": "bool hellaswag",
						"s": "",
						"u": "HELLASWAG",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "640350960aa57a13646bef404eb2a8a35ecfcd1d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hellaswag_tasks",
						"t": "size_t",
						"i": "gpt_params::hellaswag_tasks",
						"r": "size_t hellaswag_tasks",
						"s": "",
						"u": "HELLASWAG_TASKS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b91a9c53d69ba484d89cfd4b4d35c54d986797ee"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "winogrande",
						"t": "bool",
						"i": "gpt_params::winogrande",
						"r": "bool winogrande",
						"s": "",
						"u": "WINOGRANDE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a04d8f01ac3a8ab8f46e348c0105c77d2dd05bd0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "winogrande_tasks",
						"t": "size_t",
						"i": "gpt_params::winogrande_tasks",
						"r": "size_t winogrande_tasks",
						"s": "",
						"u": "WINOGRANDE_TASKS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ee8da722e9e0c3fc3f4f748b101a7e42837395c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiple_choice",
						"t": "bool",
						"i": "gpt_params::multiple_choice",
						"r": "bool multiple_choice",
						"s": "",
						"u": "MULTIPLE_CHOICE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c622c3ef5224b418648755f7ae85e8b950df5d36"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiple_choice_tasks",
						"t": "size_t",
						"i": "gpt_params::multiple_choice_tasks",
						"r": "size_t multiple_choice_tasks",
						"s": "",
						"u": "MULTIPLE_CHOICE_TASKS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52bdc37c58393e03e8df278352079c05fc0e07a1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "kl_divergence",
						"t": "bool",
						"i": "gpt_params::kl_divergence",
						"r": "bool kl_divergence",
						"s": "",
						"u": "KL_DIVERGENCE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "17c8e46a1ede5b90df3128bfdf497e5359e6c82d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mul_mat_q",
						"t": "bool",
						"i": "gpt_params::mul_mat_q",
						"r": "bool mul_mat_q",
						"s": "",
						"u": "MUL_MAT_Q",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b67620e1963a9c48ca866d625c3d020c6ed1123"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_prompt",
						"t": "bool",
						"i": "gpt_params::random_prompt",
						"r": "bool random_prompt",
						"s": "",
						"u": "RANDOM_PROMPT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "34a058cb61cedfaa2eb270e5f8a39c3cf2301bad"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "use_color",
						"t": "bool",
						"i": "gpt_params::use_color",
						"r": "bool use_color",
						"s": "",
						"u": "USE_COLOR",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1fc28a56b9ffaeef565cb24ea72a188aae18fa46"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "interactive",
						"t": "bool",
						"i": "gpt_params::interactive",
						"r": "bool interactive",
						"s": "",
						"u": "INTERACTIVE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aa403ab6d35c8e549991b23f5b0da7fecad7095b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "chatml",
						"t": "bool",
						"i": "gpt_params::chatml",
						"r": "bool chatml",
						"s": "",
						"u": "CHATML",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9523f676a08cf75e1ce14495aa690d0d850428b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prompt_cache_all",
						"t": "bool",
						"i": "gpt_params::prompt_cache_all",
						"r": "bool prompt_cache_all",
						"s": "",
						"u": "PROMPT_CACHE_ALL",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d0654e35beb614f7fb89e12b93f6c321b79273fb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prompt_cache_ro",
						"t": "bool",
						"i": "gpt_params::prompt_cache_ro",
						"r": "bool prompt_cache_ro",
						"s": "",
						"u": "PROMPT_CACHE_RO",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "86a17df6b49d853174940d6bc77a5563dc63fd2c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "embedding",
						"t": "bool",
						"i": "gpt_params::embedding",
						"r": "bool embedding",
						"s": "",
						"u": "EMBEDDING",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "180aed827bbfe8a68cde20e03a96ebc63a28799e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "escape",
						"t": "bool",
						"i": "gpt_params::escape",
						"r": "bool escape",
						"s": "",
						"u": "ESCAPE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d05216c7df90d0bc12b2cf475778c2fc6dadd517"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "interactive_first",
						"t": "bool",
						"i": "gpt_params::interactive_first",
						"r": "bool interactive_first",
						"s": "",
						"u": "INTERACTIVE_FIRST",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55948d7ea75d312d520529520ab1f21afb17aa59"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "multiline_input",
						"t": "bool",
						"i": "gpt_params::multiline_input",
						"r": "bool multiline_input",
						"s": "",
						"u": "MULTILINE_INPUT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d221233a68f90750ad3023f9dfe183d16883a1b8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "simple_io",
						"t": "bool",
						"i": "gpt_params::simple_io",
						"r": "bool simple_io",
						"s": "",
						"u": "SIMPLE_IO",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "33316ea05a034cd66a2be18775d209b22b7c9732"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cont_batching",
						"t": "bool",
						"i": "gpt_params::cont_batching",
						"r": "bool cont_batching",
						"s": "",
						"u": "CONT_BATCHING",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a9c3187f9c29f940375181dd5a6a42d19f6e06a2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "input_prefix_bos",
						"t": "bool",
						"i": "gpt_params::input_prefix_bos",
						"r": "bool input_prefix_bos",
						"s": "",
						"u": "INPUT_PREFIX_BOS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e09f819e289dbf3f264e00562d935d7643239586"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "ignore_eos",
						"t": "bool",
						"i": "gpt_params::ignore_eos",
						"r": "bool ignore_eos",
						"s": "",
						"u": "IGNORE_EOS",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "455b82eca2ea0651fccfad9801ef95ef5018c1ad"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "instruct",
						"t": "bool",
						"i": "gpt_params::instruct",
						"r": "bool instruct",
						"s": "",
						"u": "INSTRUCT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20e2e8e33432f39fd4723c5b6f6a35dd6cd36c89"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logits_all",
						"t": "bool",
						"i": "gpt_params::logits_all",
						"r": "bool logits_all",
						"s": "",
						"u": "LOGITS_ALL",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a5dda215103d69de7b928434ac8b6446ac501f96"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "use_mmap",
						"t": "bool",
						"i": "gpt_params::use_mmap",
						"r": "bool use_mmap",
						"s": "",
						"u": "USE_MMAP",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe79bcbf925cf553be5b033552f9e0eefea7ccd1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "use_mlock",
						"t": "bool",
						"i": "gpt_params::use_mlock",
						"r": "bool use_mlock",
						"s": "",
						"u": "USE_MLOCK",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ac8c132e8e24302685e730c5d39ae3cb2f82c923"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "numa",
						"t": "bool",
						"i": "gpt_params::numa",
						"r": "bool numa",
						"s": "",
						"u": "NUMA",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90b15f847d770a529ececfd06261d63fd2d3395c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "verbose_prompt",
						"t": "bool",
						"i": "gpt_params::verbose_prompt",
						"r": "bool verbose_prompt",
						"s": "",
						"u": "VERBOSE_PROMPT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dbb5994d964e94f9857cf444c3982deef147fd9a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "display_prompt",
						"t": "bool",
						"i": "gpt_params::display_prompt",
						"r": "bool display_prompt",
						"s": "",
						"u": "DISPLAY_PROMPT",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "81eb1958fa0968a6b3e306cf1b026282fac55bfd"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "infill",
						"t": "bool",
						"i": "gpt_params::infill",
						"r": "bool infill",
						"s": "",
						"u": "INFILL",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "043aea03e6d0b3e3b53fa7e6f07370f3acc07ad4"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dump_kv_cache",
						"t": "bool",
						"i": "gpt_params::dump_kv_cache",
						"r": "bool dump_kv_cache",
						"s": "",
						"u": "DUMP_KV_CACHE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0afcc490a45b4dd2afbf44bb8a0381e3c0e0083a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "no_kv_offload",
						"t": "bool",
						"i": "gpt_params::no_kv_offload",
						"r": "bool no_kv_offload",
						"s": "",
						"u": "NO_KV_OFFLOAD",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c714c5b8ba388ca79ac4af880ed5523a47f6b1af"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cache_type_k",
						"t": "std::string",
						"i": "gpt_params::cache_type_k",
						"r": "std::string cache_type_k",
						"s": "",
						"u": "CACHE_TYPE_K",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "185aac7783104b18d8c8be6e00c818145ea980ec"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cache_type_v",
						"t": "std::string",
						"i": "gpt_params::cache_type_v",
						"r": "std::string cache_type_v",
						"s": "",
						"u": "CACHE_TYPE_V",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c8d29e768f6a3cffd6574f8f1fa68f50ed1ca16"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mmproj",
						"t": "std::string",
						"i": "gpt_params::mmproj",
						"r": "std::string mmproj",
						"s": "",
						"u": "MMPROJ",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "90ad5a3978ec851f2768f9d0104028a2ca7f898e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "image",
						"t": "std::string",
						"i": "gpt_params::image",
						"r": "std::string image",
						"s": "",
						"u": "IMAGE",
						"q": "gpt_params",
						"w": "GPT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54094e8c5b949d1cf7209fd05ba3e757d8034a6d"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "gpt_params_parse_ex",
						"t": "bool (int, char **, gpt_params &)",
						"i": "gpt_params_parse_ex(int,char**,gpt_params&)",
						"r": "bool gpt_params_parse_ex(int argc, char **argv, gpt_params& params)",
						"s": "",
						"u": "GPT_PARAMS_PARSE_EX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e5e87d955bb431caa60a7842f0c4868ee376389d"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "gpt_params_parse",
						"t": "bool (int, char **, gpt_params &)",
						"i": "gpt_params_parse(int,char**,gpt_params&)",
						"r": "bool gpt_params_parse(int argc, char **argv, gpt_params& params)",
						"s": "",
						"u": "GPT_PARAMS_PARSE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "40de8e5a5544e6bd17e8b4eee79941f27e3019a3"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "gpt_print_usage",
						"t": "void (int, char **, const gpt_params &)",
						"i": "gpt_print_usage(int,char**,const gpt_params&)",
						"r": "void gpt_print_usage(int argc, char **argv, const gpt_params& params)",
						"s": "",
						"u": "GPT_PRINT_USAGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f519ec7d19413a4dde39ff552c6d1e9ceb3c1eff"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "get_system_info",
						"t": "std::string (const gpt_params &)",
						"i": "get_system_info(const gpt_params&)",
						"r": "std::string get_system_info(const gpt_params& params)",
						"s": "",
						"u": "GET_SYSTEM_INFO",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cf8d75f575461c279f2e592c6565dd480d0d507d"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "gpt_random_prompt",
						"t": "std::string (std::mt19937 &)",
						"i": "gpt_random_prompt(std::mt19937&)",
						"r": "std::string gpt_random_prompt(std::mt19937& rng)",
						"s": "",
						"u": "GPT_RANDOM_PROMPT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c27ebe5cd669ce3c5f9cf6a6ff7de6be048abc5"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "process_escapes",
						"t": "void (std::string &)",
						"i": "process_escapes(std::string&)",
						"r": "void process_escapes(std::string& input)",
						"s": "",
						"u": "PROCESS_ESCAPES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3a28fc4a11fafeb71d5aff53c277bb3c4c243b31"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "parse_samplers_input",
						"t": "std::string (std::string)",
						"i": "parse_samplers_input(std::string)",
						"r": "std::string parse_samplers_input(std::string input)",
						"s": "",
						"u": "PARSE_SAMPLERS_INPUT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5450e70d2e800ef222be69d7803f13c35713c293"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_model",
						"t": "llama_model",
						"i": "llama_model",
						"r": "llama_model",
						"s": "",
						"u": "LLAMA_MODEL",
						"q": "llama_model",
						"w": "LLAMA_MODEL",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60f601c935bd458292ea1366eaa0a58bc601be2c"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_init_from_gpt_params",
						"t": "std::tuple<struct llama_model *, struct llama_context *> (gpt_params &)",
						"i": "llama_init_from_gpt_params(gpt_params&)",
						"r": "std::tuple<struct llama_model *, struct llama_context *> llama_init_from_gpt_params(gpt_params& params)",
						"s": "",
						"u": "LLAMA_INIT_FROM_GPT_PARAMS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "414bca8a3c632268c69f9069b01b079ffa36d50f"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_model_params",
						"t": "llama_model_params",
						"i": "llama_model_params",
						"r": "llama_model_params",
						"s": "",
						"u": "LLAMA_MODEL_PARAMS",
						"q": "llama_model_params",
						"w": "LLAMA_MODEL_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa6945d5ec4d73c2254c2bd3a1215f041ee2c66c"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_model_params_from_gpt_params",
						"t": "struct llama_model_params (const gpt_params &)",
						"i": "llama_model_params_from_gpt_params(const gpt_params&)",
						"r": "llama_model_params llama_model_params_from_gpt_params(const gpt_params& params)",
						"s": "",
						"u": "LLAMA_MODEL_PARAMS_FROM_GPT_PARAMS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84ec2415845331f4a7c78750d2d98d9fbb2e343f"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_context_params",
						"t": "llama_context_params",
						"i": "llama_context_params",
						"r": "llama_context_params",
						"s": "",
						"u": "LLAMA_CONTEXT_PARAMS",
						"q": "llama_context_params",
						"w": "LLAMA_CONTEXT_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "61cc8ae81f1fd2d25bf9b2cfd13f402ad955ae74"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_context_params_from_gpt_params",
						"t": "struct llama_context_params (const gpt_params &)",
						"i": "llama_context_params_from_gpt_params(const gpt_params&)",
						"r": "llama_context_params llama_context_params_from_gpt_params(const gpt_params& params)",
						"s": "",
						"u": "LLAMA_CONTEXT_PARAMS_FROM_GPT_PARAMS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "69c0651ef8350182d0340aad0b19ea678617fc43"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_batch_clear",
						"t": "void (struct llama_batch &)",
						"i": "llama_batch_clear(llama_batch&)",
						"r": "void llama_batch_clear(llama_batch& batch)",
						"s": "",
						"u": "LLAMA_BATCH_CLEAR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "393ba889aa8f81f20104c31218252e55f6a36c4f"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_batch",
						"t": "llama_batch",
						"i": "llama_batch",
						"r": "llama_batch",
						"s": "",
						"u": "LLAMA_BATCH",
						"q": "llama_batch",
						"w": "LLAMA_BATCH",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f4d4cd067bccb08fdf8abdc4e1c66af35d4fb711"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_batch_add",
						"t": "void (struct llama_batch &, int, int, const int &, bool)",
						"i": "llama_batch_add(llama_batch&,int,int,const int&,bool)",
						"r": "void llama_batch_add(llama_batch& batch, int id, int pos, const int& seq_ids, bool logits)",
						"s": "",
						"u": "LLAMA_BATCH_ADD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9a030cd660deabb9cfb0739c463e7b468ad60499"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_tokenize",
						"t": "int (const struct llama_context *, const std::string &, bool, bool)",
						"i": "llama_tokenize(const llama_context*,const std::string&,bool,bool)",
						"r": "int llama_tokenize(const llama_context *ctx, const std::string& text, bool add_bos, bool special = false)",
						"s": "",
						"u": "LLAMA_TOKENIZE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "94e5730e85f2cea39129f990b188ad9b8ab154bc"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_tokenize",
						"t": "int (const struct llama_model *, const std::string &, bool, bool)",
						"i": "llama_tokenize(const llama_model*,const std::string&,bool,bool)",
						"r": "int llama_tokenize(const llama_model *model, const std::string& text, bool add_bos, bool special = false)",
						"s": "",
						"u": "LLAMA_TOKENIZE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "be39bc58e74e25401c0e9a6bbc1da64dc99fe9b7"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_token_to_piece",
						"t": "std::string (const struct llama_context *, int)",
						"i": "llama_token_to_piece(const llama_context*,int)",
						"r": "std::string llama_token_to_piece(const llama_context *ctx, int token)",
						"s": "",
						"u": "LLAMA_TOKEN_TO_PIECE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a97eb67d1f48f8b81f26bc0dbe7ee3db8c676cb3"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_detokenize_spm",
						"t": "std::string (llama_context *, const int &)",
						"i": "llama_detokenize_spm(llama_context*,const int&)",
						"r": "std::string llama_detokenize_spm(llama_context *ctx, const int& tokens)",
						"s": "",
						"u": "LLAMA_DETOKENIZE_SPM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "81dd7d36c19adb17205235355409f822064b49f2"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_detokenize_bpe",
						"t": "std::string (llama_context *, const int &)",
						"i": "llama_detokenize_bpe(llama_context*,const int&)",
						"r": "std::string llama_detokenize_bpe(llama_context *ctx, const int& tokens)",
						"s": "",
						"u": "LLAMA_DETOKENIZE_BPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8292a9b23eec2b8ffd95ef6c55fec38fb4d694df"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_should_add_bos_token",
						"t": "bool (const llama_model *)",
						"i": "llama_should_add_bos_token(const llama_model*)",
						"r": "bool llama_should_add_bos_token(const llama_model *model)",
						"s": "",
						"u": "LLAMA_SHOULD_ADD_BOS_TOKEN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "665c199c25b83675aca553bde4337f547d2736e2"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "create_directory_with_parents",
						"t": "bool (const std::string &)",
						"i": "create_directory_with_parents(const std::string&)",
						"r": "bool create_directory_with_parents(const std::string& path)",
						"s": "",
						"u": "CREATE_DIRECTORY_WITH_PARENTS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1215c3ebc818930bdfab577f3475b33712e2e5ce"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "dump_vector_float_yaml",
						"t": "void (FILE *, const char *, const int &)",
						"i": "dump_vector_float_yaml(FILE*,const char*,const int&)",
						"r": "void dump_vector_float_yaml(FILE *stream, const char *prop_name, const int& data)",
						"s": "",
						"u": "DUMP_VECTOR_FLOAT_YAML",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ed04d5fda2814cb728cd5d3d21b87d150c395002"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "dump_vector_int_yaml",
						"t": "void (FILE *, const char *, const int &)",
						"i": "dump_vector_int_yaml(FILE*,const char*,const int&)",
						"r": "void dump_vector_int_yaml(FILE *stream, const char *prop_name, const int& data)",
						"s": "",
						"u": "DUMP_VECTOR_INT_YAML",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f806b0e0a287bbca9107752b3d724fc1176d6bba"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "dump_string_yaml_multiline",
						"t": "void (FILE *, const char *, const char *)",
						"i": "dump_string_yaml_multiline(FILE*,const char*,const char*)",
						"r": "void dump_string_yaml_multiline(FILE *stream, const char *prop_name, const char *data)",
						"s": "",
						"u": "DUMP_STRING_YAML_MULTILINE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44007a519585fa5ce77c23dfc673aa1fcb738a1e"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "get_sortable_timestamp",
						"t": "std::string ()",
						"i": "get_sortable_timestamp()",
						"r": "std::string get_sortable_timestamp()",
						"s": "",
						"u": "GET_SORTABLE_TIMESTAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "beb0fd61c1684b03307c029c7db7dfaa86a561cc"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "dump_non_result_info_yaml",
						"t": "void (FILE *, const gpt_params &, const llama_context *, const std::string &, const int &, const char *)",
						"i": "dump_non_result_info_yaml(FILE*,const gpt_params&,const llama_context*,const std::string&,const int&,const char*)",
						"r": "void dump_non_result_info_yaml(FILE *stream, const gpt_params& params, const llama_context *lctx, const std::string& timestamp, const int& prompt_tokens, const char *model_desc)",
						"s": "",
						"u": "DUMP_NON_RESULT_INFO_YAML",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "719895e95573fc11f5b61d7db883aa95d627ebb8"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "dump_kv_cache_view",
						"t": "void (const int &, int)",
						"i": "dump_kv_cache_view(const int&,int)",
						"r": "void dump_kv_cache_view(const int& view, int row_size = 80)",
						"s": "",
						"u": "DUMP_KV_CACHE_VIEW",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9199e1984e1552f1ef71d13821d61f342927bf8f"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "dump_kv_cache_view_seqs",
						"t": "void (const int &, int)",
						"i": "dump_kv_cache_view_seqs(const int&,int)",
						"r": "void dump_kv_cache_view_seqs(const int& view, int row_size = 40)",
						"s": "",
						"u": "DUMP_KV_CACHE_VIEW_SEQS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "02920e358e61363b2a8960a5a22fdd5b8c639931"
							}
						]
					}
				]
			}
		},
		{
			"key": "log.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TARGET",
						"t": "",
						"i": "LOG_TARGET",
						"r": "LOG_TARGET",
						"s": "",
						"u": "LOG_TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fe8f52ca542584219ade1f7369c7610872aec037"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE_TARGET",
						"t": "",
						"i": "LOG_TEE_TARGET",
						"r": "LOG_TEE_TARGET",
						"s": "",
						"u": "LOG_TEE_TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6eedd694813593622f2ab2ea0b83e653de3a0bc"
							}
						]
					},
					{
						"k": 5,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LogTriState",
						"t": "LogTriState",
						"i": "LogTriState",
						"r": "enum LogTriState",
						"s": "",
						"u": "LOGTRISTATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65dd3b85ab10ccfe9b80946944ef79b7e6c3e5c9"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LogTriStateSame",
						"t": "LogTriState",
						"i": "LogTriStateSame",
						"r": "LogTriStateSame",
						"s": "",
						"u": "LOGTRISTATESAME",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8198448bd04f50dec1e038b0010a9bf821c45071"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LogTriStateFalse",
						"t": "LogTriState",
						"i": "LogTriStateFalse",
						"r": "LogTriStateFalse",
						"s": "",
						"u": "LOGTRISTATEFALSE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7829c4bf35799e24f7c81f46d262b84ad48f69bd"
							}
						]
					},
					{
						"k": 7,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LogTriStateTrue",
						"t": "LogTriState",
						"i": "LogTriStateTrue",
						"r": "LogTriStateTrue",
						"s": "",
						"u": "LOGTRISTATETRUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "054c96f06e514169567cefe0c31db0a469f80af4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_get_pid",
						"t": "std::string ()",
						"i": "log_get_pid()",
						"r": "std::string log_get_pid()",
						"s": "",
						"u": "LOG_GET_PID",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fa9cc111f1f74bbbd84e4b292dee5a5138307ac5"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_filename_generator",
						"t": "",
						"i": "log_filename_generator",
						"r": "log_filename_generator",
						"s": "",
						"u": "LOG_FILENAME_GENERATOR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f88e11074e8e3fb5e1e9f90b3de1da96fa483a6c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_filename_generator_impl",
						"t": "std::string (LogTriState, const std::string &, const std::string &)",
						"i": "log_filename_generator_impl(LogTriState,const std::string&,const std::string&)",
						"r": "std::string log_filename_generator_impl(LogTriState multilog, const std::string& log_file_basename, const std::string& log_file_extension)",
						"s": "",
						"u": "LOG_FILENAME_GENERATOR_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08b0c229c8abefc4970bdc3ef54eaff6f00fd5c7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_DEFAULT_FILE_NAME",
						"t": "",
						"i": "LOG_DEFAULT_FILE_NAME",
						"r": "LOG_DEFAULT_FILE_NAME",
						"s": "",
						"u": "LOG_DEFAULT_FILE_NAME",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cace810978408242a44ee6471a3ea9034b015f1c"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_STRINGIZE1",
						"t": "",
						"i": "LOG_STRINGIZE1",
						"r": "LOG_STRINGIZE1",
						"s": "",
						"u": "LOG_STRINGIZE1",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44d83e9958906b9e87e117c69585b35493224c6b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_STRINGIZE",
						"t": "",
						"i": "LOG_STRINGIZE",
						"r": "LOG_STRINGIZE",
						"s": "",
						"u": "LOG_STRINGIZE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d03fc2a42cb47b580b197d46f6653f3a47c3a40"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE_TARGET_STRING",
						"t": "",
						"i": "LOG_TEE_TARGET_STRING",
						"r": "LOG_TEE_TARGET_STRING",
						"s": "",
						"u": "LOG_TEE_TARGET_STRING",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8fb8f785cfa6b0878d3615470ff7dfb93d3b04a1"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TIMESTAMP_FMT",
						"t": "",
						"i": "LOG_TIMESTAMP_FMT",
						"r": "LOG_TIMESTAMP_FMT",
						"s": "",
						"u": "LOG_TIMESTAMP_FMT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d05ce274b9bfd1373981cd5f3edaa3120090e4b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TIMESTAMP_VAL",
						"t": "",
						"i": "LOG_TIMESTAMP_VAL",
						"r": "LOG_TIMESTAMP_VAL",
						"s": "",
						"u": "LOG_TIMESTAMP_VAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "24eea35bf22925bfcd1a0dd060ebb54c59f63279"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE_TIMESTAMP_FMT",
						"t": "",
						"i": "LOG_TEE_TIMESTAMP_FMT",
						"r": "LOG_TEE_TIMESTAMP_FMT",
						"s": "",
						"u": "LOG_TEE_TIMESTAMP_FMT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3977b40cfd7cb85f09017eec822f2c29b7826ee5"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE_TIMESTAMP_VAL",
						"t": "",
						"i": "LOG_TEE_TIMESTAMP_VAL",
						"r": "LOG_TEE_TIMESTAMP_VAL",
						"s": "",
						"u": "LOG_TEE_TIMESTAMP_VAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "47c140e59240198fc72756fda9b11871aa6a3ac6"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_FLF_FMT",
						"t": "",
						"i": "LOG_FLF_FMT",
						"r": "LOG_FLF_FMT",
						"s": "",
						"u": "LOG_FLF_FMT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1488b9833da3297822f037b15ec17829bf8262f"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_FLF_VAL",
						"t": "",
						"i": "LOG_FLF_VAL",
						"r": "LOG_FLF_VAL",
						"s": "",
						"u": "LOG_FLF_VAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6a83947a56e13df5719687a51cb1e553b58dc7b6"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE_FLF_FMT",
						"t": "",
						"i": "LOG_TEE_FLF_FMT",
						"r": "LOG_TEE_FLF_FMT",
						"s": "",
						"u": "LOG_TEE_FLF_FMT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13848ed09929f0151fbb997ec0b9dfd40db4a9c7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE_FLF_VAL",
						"t": "",
						"i": "LOG_TEE_FLF_VAL",
						"r": "LOG_TEE_FLF_VAL",
						"s": "",
						"u": "LOG_TEE_FLF_VAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4c90b4ff2767a9e8875047bdda4985e798a90329"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_IMPL",
						"t": "",
						"i": "LOG_IMPL",
						"r": "LOG_IMPL",
						"s": "",
						"u": "LOG_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3416304aeafe10a84bb4c1df52f547f7f6d371a5"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE_IMPL",
						"t": "",
						"i": "LOG_TEE_IMPL",
						"r": "LOG_TEE_IMPL",
						"s": "",
						"u": "LOG_TEE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09f6783b4f9138ce4546a63ece324d9375f3e0ed"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEE",
						"t": "",
						"i": "LOG_TEE",
						"r": "LOG_TEE",
						"s": "",
						"u": "LOG_TEE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8dd2f7c995a3c55a21a48e3cd4d34e9300ce223"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOGLN",
						"t": "",
						"i": "LOGLN",
						"r": "LOGLN",
						"s": "",
						"u": "LOGLN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "efcc92744a9a1a636e53c6cfc1e7cd3f1cc8386e"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TEELN",
						"t": "",
						"i": "LOG_TEELN",
						"r": "LOG_TEELN",
						"s": "",
						"u": "LOG_TEELN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28f0bea7c127e7252cad2bb8e49f27ffb2330321"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_handler1_impl",
						"t": "FILE *(bool, LogTriState, LogTriState, const std::string &, FILE *)",
						"i": "log_handler1_impl(bool,LogTriState,LogTriState,const std::string&,FILE*)",
						"r": "FILE *log_handler1_impl(bool change = false, LogTriState append = LogTriStateSame, LogTriState disable = LogTriStateSame, const std::string& filename = log_filename_generator_impl(LogTriStateSame, \"llama\", \"log\"), FILE *target = nullptr)",
						"s": "",
						"u": "LOG_HANDLER1_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d25007af3e786a56b085900a82bd808a8a488687"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_handler2_impl",
						"t": "FILE *(bool, LogTriState, LogTriState, FILE *, const std::string &)",
						"i": "log_handler2_impl(bool,LogTriState,LogTriState,FILE*,const std::string&)",
						"r": "FILE *log_handler2_impl(bool change = false, LogTriState append = LogTriStateSame, LogTriState disable = LogTriStateSame, FILE *target = nullptr, const std::string& filename = log_filename_generator_impl(LogTriStateSame, \"llama\", \"log\"))",
						"s": "",
						"u": "LOG_HANDLER2_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9512599f172815b2a19b7b1feb311908760c679"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_disable",
						"t": "",
						"i": "log_disable",
						"r": "log_disable",
						"s": "",
						"u": "LOG_DISABLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "340fd7eef651b5481beadb1725b83008afe920d5"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_disable_impl",
						"t": "FILE *()",
						"i": "log_disable_impl()",
						"r": "FILE *log_disable_impl()",
						"s": "",
						"u": "LOG_DISABLE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0575cd084dbdf9e891712c71f2ec535d78ee03b2"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_enable",
						"t": "",
						"i": "log_enable",
						"r": "log_enable",
						"s": "",
						"u": "LOG_ENABLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "869a820683b30e45393b23dff7ae9ee2fff1b7d5"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_enable_impl",
						"t": "FILE *()",
						"i": "log_enable_impl()",
						"r": "FILE *log_enable_impl()",
						"s": "",
						"u": "LOG_ENABLE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27a3ee8cfb3f48b8ae96c248c2817e29932dc449"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_set_target",
						"t": "",
						"i": "log_set_target",
						"r": "log_set_target",
						"s": "",
						"u": "LOG_SET_TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e163e932273a1026c8b0466eccb428b5cb682d5"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_set_target_impl",
						"t": "FILE *(const std::string &)",
						"i": "log_set_target_impl(const std::string&)",
						"r": "FILE *log_set_target_impl(const std::string& filename)",
						"s": "",
						"u": "LOG_SET_TARGET_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e09f36ce19b4d2c928791e06986296fdfd268ca4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_set_target_impl",
						"t": "FILE *(FILE *)",
						"i": "log_set_target_impl(FILE*)",
						"r": "FILE *log_set_target_impl(FILE *target)",
						"s": "",
						"u": "LOG_SET_TARGET_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ba56df34884208eeee36e6d44a0864e3372c93a9"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_handler",
						"t": "FILE *()",
						"i": "log_handler()",
						"r": "FILE *log_handler()",
						"s": "",
						"u": "LOG_HANDLER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3b01744925260aa3a19c8c93ad192f74ad091a0d"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_multilog",
						"t": "",
						"i": "log_multilog",
						"r": "log_multilog",
						"s": "",
						"u": "LOG_MULTILOG",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "825a88f7f30443fca08fe435704f763170429653"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_append",
						"t": "",
						"i": "log_append",
						"r": "log_append",
						"s": "",
						"u": "LOG_APPEND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d4449115cc796875a611b833fd8319f2cfabf4e"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_append_impl",
						"t": "FILE *(bool)",
						"i": "log_append_impl(bool)",
						"r": "FILE *log_append_impl(bool enable)",
						"s": "",
						"u": "LOG_APPEND_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "71f0058e99daeab56edca12567c882588d3f01fd"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_test",
						"t": "void ()",
						"i": "log_test()",
						"r": "void log_test()",
						"s": "",
						"u": "LOG_TEST",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "974053f7b3ba78c07181b4d08f6f37bb263e309a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_param_single_parse",
						"t": "bool (const std::string &)",
						"i": "log_param_single_parse(const std::string&)",
						"r": "bool log_param_single_parse(const std::string& param)",
						"s": "",
						"u": "LOG_PARAM_SINGLE_PARSE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4babb7bccacd328f8fa6dcb80e68c0643cd14ac1"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_param_pair_parse",
						"t": "bool (bool, const std::string &, const std::string &)",
						"i": "log_param_pair_parse(bool,const std::string&,const std::string&)",
						"r": "bool log_param_pair_parse(bool check_but_dont_parse, const std::string& param, const std::string& next = std::string())",
						"s": "",
						"u": "LOG_PARAM_PAIR_PARSE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "96b6ed5f3ea75fa335fef975b00550ec7fa4ca71"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_print_usage",
						"t": "void ()",
						"i": "log_print_usage()",
						"r": "void log_print_usage()",
						"s": "",
						"u": "LOG_PRINT_USAGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4d410a89b16bd5247f9f336bc69d5d2bd71c12a0"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_dump_cmdline",
						"t": "",
						"i": "log_dump_cmdline",
						"r": "log_dump_cmdline",
						"s": "",
						"u": "LOG_DUMP_CMDLINE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "443419d6edb73a34b10d9f4dc9cf13194a220cd4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_dump_cmdline_impl",
						"t": "void (int, char **)",
						"i": "log_dump_cmdline_impl(int,char**)",
						"r": "void log_dump_cmdline_impl(int argc, char **argv)",
						"s": "",
						"u": "LOG_DUMP_CMDLINE_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4801db2c426b688953f6317a7011fde7f228361f"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "log_tostr",
						"t": "",
						"i": "log_tostr",
						"r": "log_tostr",
						"s": "",
						"u": "LOG_TOSTR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f16b83108526ce684607556b4bc6e339fd09ba7"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_var_to_string_impl",
						"t": "std::string (bool)",
						"i": "log_var_to_string_impl(bool)",
						"r": "std::string log_var_to_string_impl(bool var)",
						"s": "",
						"u": "LOG_VAR_TO_STRING_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a8bfac367e8799857641741c0fc3976341dda43c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_var_to_string_impl",
						"t": "std::string (std::string)",
						"i": "log_var_to_string_impl(std::string)",
						"r": "std::string log_var_to_string_impl(std::string var)",
						"s": "",
						"u": "LOG_VAR_TO_STRING_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06c739386b170686fabfab475c0dc14e7ea77361"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "log_var_to_string_impl",
						"t": "std::string (const std::vector<int> &)",
						"i": "log_var_to_string_impl(const std::vector&)",
						"r": "std::string log_var_to_string_impl(const std::vector<int>& var)",
						"s": "",
						"u": "LOG_VAR_TO_STRING_IMPL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "40e8c22bb93083c84be5df658eeadd7493b9c667"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_TOKENS_TOSTR_PRETTY",
						"t": "std::string (const C &, const T &)",
						"i": "LOG_TOKENS_TOSTR_PRETTY(const C&,const T&)",
						"r": "template <typename C, typename T> std::string LOG_TOKENS_TOSTR_PRETTY(const C& ctx, const T& tokens)",
						"s": "",
						"u": "LOG_TOKENS_TOSTR_PRETTY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "52e2df80700ade638b5c20602ccabdb5e696c0b6"
							}
						]
					},
					{
						"k": 30,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LOG_BATCH_TOSTR_PRETTY",
						"t": "std::string (const C &, const B &)",
						"i": "LOG_BATCH_TOSTR_PRETTY(const C&,const B&)",
						"r": "template <typename C, typename B> std::string LOG_BATCH_TOSTR_PRETTY(const C& ctx, const B& batch)",
						"s": "",
						"u": "LOG_BATCH_TOSTR_PRETTY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f5e3e48340184a3ad63b7709365498f86cf8442"
							}
						]
					}
				]
			}
		},
		{
			"key": "console.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "WIN32_LEAN_AND_MEAN",
						"t": "",
						"i": "WIN32_LEAN_AND_MEAN",
						"r": "WIN32_LEAN_AND_MEAN",
						"s": "",
						"u": "WIN32_LEAN_AND_MEAN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bea664f8a77804ab3dc1ff0ebd1762f9028b42da"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "NOMINMAX",
						"t": "",
						"i": "NOMINMAX",
						"r": "NOMINMAX",
						"s": "",
						"u": "NOMINMAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55eaf1246c782d6421d1b3ae538021e9cbac20fd"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_COLOR_RED",
						"t": "",
						"i": "ANSI_COLOR_RED",
						"r": "ANSI_COLOR_RED",
						"s": "",
						"u": "ANSI_COLOR_RED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78517d12731d891e5af06f46d4853da33fb5475b"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_COLOR_GREEN",
						"t": "",
						"i": "ANSI_COLOR_GREEN",
						"r": "ANSI_COLOR_GREEN",
						"s": "",
						"u": "ANSI_COLOR_GREEN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b965bece8fede055454b730b809f2a9e3b9ce0ac"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_COLOR_YELLOW",
						"t": "",
						"i": "ANSI_COLOR_YELLOW",
						"r": "ANSI_COLOR_YELLOW",
						"s": "",
						"u": "ANSI_COLOR_YELLOW",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "abae10d99f981c04e81a35329e3545512eab954f"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_COLOR_BLUE",
						"t": "",
						"i": "ANSI_COLOR_BLUE",
						"r": "ANSI_COLOR_BLUE",
						"s": "",
						"u": "ANSI_COLOR_BLUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c8e3ba26822e90b99379b266c5763ec6af6711c4"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_COLOR_MAGENTA",
						"t": "",
						"i": "ANSI_COLOR_MAGENTA",
						"r": "ANSI_COLOR_MAGENTA",
						"s": "",
						"u": "ANSI_COLOR_MAGENTA",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "677462e572ff64b848385fe9180c583d5bc4ac3e"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_COLOR_CYAN",
						"t": "",
						"i": "ANSI_COLOR_CYAN",
						"r": "ANSI_COLOR_CYAN",
						"s": "",
						"u": "ANSI_COLOR_CYAN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d7b51ed1efae97950ab65795139d1fc94e7251a7"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_COLOR_RESET",
						"t": "",
						"i": "ANSI_COLOR_RESET",
						"r": "ANSI_COLOR_RESET",
						"s": "",
						"u": "ANSI_COLOR_RESET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f279efa5a66a0f13f65118b05d75a3c4c5a09cf0"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "ANSI_BOLD",
						"t": "",
						"i": "ANSI_BOLD",
						"r": "ANSI_BOLD",
						"s": "",
						"u": "ANSI_BOLD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "733ff77de71756770aedd66e022493bd41d80882"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "advanced_display",
						"t": "bool",
						"i": "console::advanced_display",
						"r": "static bool advanced_display",
						"s": "console",
						"u": "ADVANCED_DISPLAY",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "62049d87b15e54a18559c6306fb6c22cdb4b0915"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "simple_io",
						"t": "bool",
						"i": "console::simple_io",
						"r": "static bool simple_io",
						"s": "console",
						"u": "SIMPLE_IO",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dda589a9cc0c54882afc497731b430898ac11442"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "current_display",
						"t": "display_t",
						"i": "console::current_display",
						"r": "static display_t current_display",
						"s": "console",
						"u": "CURRENT_DISPLAY",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0a45bf09c72cac7629990d395bbd32aa21648ab"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "out",
						"t": "FILE *",
						"i": "console::out",
						"r": "static FILE *out",
						"s": "console",
						"u": "OUT",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "33affff46494b692603757efe21cfba5c53bca5b"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "hConsole",
						"t": "void *",
						"i": "console::hConsole",
						"r": "static void *hConsole",
						"s": "console",
						"u": "HCONSOLE",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1c7821cb11e9ada9b66c70ae8c3eba0e1b301d9"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "init",
						"t": "void (bool, bool)",
						"i": "console::init(bool,bool)",
						"r": "void init(bool use_simple_io, bool use_advanced_display)",
						"s": "console",
						"u": "INIT",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "20a7421626f5fd7baa6273f7f009c0fb14565da8"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cleanup",
						"t": "void ()",
						"i": "console::cleanup()",
						"r": "void cleanup()",
						"s": "console",
						"u": "CLEANUP",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9d05384124bcc727da4793bb570f44b3c31b208"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "set_display",
						"t": "void (display_t)",
						"i": "console::set_display(display_t)",
						"r": "void set_display(display_t display)",
						"s": "console",
						"u": "SET_DISPLAY",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "451de600221ea73ac3d6438d551d9a0e8ef84cc0"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "getchar32",
						"t": "char32_t ()",
						"i": "console::getchar32()",
						"r": "static char32_t getchar32()",
						"s": "console",
						"u": "GETCHAR32",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd5a80fa93bbc32375a9f3515af34ada76c0c1a8"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "pop_cursor",
						"t": "void ()",
						"i": "console::pop_cursor()",
						"r": "static void pop_cursor()",
						"s": "console",
						"u": "POP_CURSOR",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "969d21ffa424a3a9f8cccbfa68ac0d60a72b3151"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "estimateWidth",
						"t": "int (char32_t)",
						"i": "console::estimateWidth(char32_t)",
						"r": "static int estimateWidth(char32_t codepoint)",
						"s": "console",
						"u": "ESTIMATEWIDTH",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "67d6ccb7b37991f079b76c5639236da8ef9fd76a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "put_codepoint",
						"t": "int (const char *, size_t, int)",
						"i": "console::put_codepoint(const char*,size_t,int)",
						"r": "static int put_codepoint(const char *utf8_codepoint, size_t length, int expectedWidth)",
						"s": "console",
						"u": "PUT_CODEPOINT",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8d85f6331350dcbac0093e4df47d7957ca94e520"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "replace_last",
						"t": "void (char)",
						"i": "console::replace_last(char)",
						"r": "static void replace_last(char ch)",
						"s": "console",
						"u": "REPLACE_LAST",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6090ba6bbed4dfa65ce8b48a67ad986f7a8abec2"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "append_utf8",
						"t": "void (char32_t, std::string &)",
						"i": "console::append_utf8(char32_t,std::string&)",
						"r": "static void append_utf8(char32_t ch, std::string& out)",
						"s": "console",
						"u": "APPEND_UTF8",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "aff9bd5bc3eef9592a531b6e2c52fd80724d201f"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "pop_back_utf8_char",
						"t": "void (std::string &)",
						"i": "console::pop_back_utf8_char(std::string&)",
						"r": "static void pop_back_utf8_char(std::string& line)",
						"s": "console",
						"u": "POP_BACK_UTF8_CHAR",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "48b4a9543988712c536fb998ca6720e8d3488aa3"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "readline_advanced",
						"t": "bool (std::string &, bool)",
						"i": "console::readline_advanced(std::string&,bool)",
						"r": "static bool readline_advanced(std::string& line, bool multiline_input)",
						"s": "console",
						"u": "READLINE_ADVANCED",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7cbcbb3f05f00badf3517dd829b53633fd466b63"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "readline_simple",
						"t": "bool (std::string &, bool)",
						"i": "console::readline_simple(std::string&,bool)",
						"r": "static bool readline_simple(std::string& line, bool multiline_input)",
						"s": "console",
						"u": "READLINE_SIMPLE",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a10f2c57ce741e2ab9d8b3d5955d6605503b4353"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "readline",
						"t": "bool (std::string &, bool)",
						"i": "console::readline(std::string&,bool)",
						"r": "bool readline(std::string& line, bool multiline_input)",
						"s": "console",
						"u": "READLINE",
						"q": "console",
						"w": "CONSOLE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b547e319507a20070a84795d6ea10d02db353b4a"
							}
						]
					}
				]
			}
		},
		{
			"key": "grammar-parser.cpp",
			"value": {
				"items": [
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "decode_utf8",
						"t": "std::pair<uint32_t, const char *> (const char *)",
						"i": "grammar_parser::decode_utf8(const char*)",
						"r": "static std::pair<uint32_t, const char *> decode_utf8(const char *src)",
						"s": "grammar_parser",
						"u": "DECODE_UTF8",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4b08804551c9341604cb8fd58468476f4eac2fd3"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "get_symbol_id",
						"t": "uint32_t (parse_state &, const char *, size_t)",
						"i": "grammar_parser::get_symbol_id(parse_state&,const char*,size_t)",
						"r": "static uint32_t get_symbol_id(parse_state& state, const char *src, size_t len)",
						"s": "grammar_parser",
						"u": "GET_SYMBOL_ID",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6dd24cc8fd1ac6009acdf47c499bb2f038c12017"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "generate_symbol_id",
						"t": "uint32_t (parse_state &, const std::string &)",
						"i": "grammar_parser::generate_symbol_id(parse_state&,const std::string&)",
						"r": "static uint32_t generate_symbol_id(parse_state& state, const std::string& base_name)",
						"s": "grammar_parser",
						"u": "GENERATE_SYMBOL_ID",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a49733afe1e42b2852403133ea0e074a2f8c7859"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "add_rule",
						"t": "void (parse_state &, uint32_t, const int &)",
						"i": "grammar_parser::add_rule(parse_state&,uint32_t,const int&)",
						"r": "static void add_rule(parse_state& state, uint32_t rule_id, const int& rule)",
						"s": "grammar_parser",
						"u": "ADD_RULE",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ea2142efca00c2239211ce28a69f0f8b75f6ef5"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "is_word_char",
						"t": "bool (char)",
						"i": "grammar_parser::is_word_char(char)",
						"r": "static bool is_word_char(char c)",
						"s": "grammar_parser",
						"u": "IS_WORD_CHAR",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a5a1922e655f3a2197e433e2dadc99916abc8e43"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "parse_hex",
						"t": "std::pair<uint32_t, const char *> (const char *, int)",
						"i": "grammar_parser::parse_hex(const char*,int)",
						"r": "static std::pair<uint32_t, const char *> parse_hex(const char *src, int size)",
						"s": "grammar_parser",
						"u": "PARSE_HEX",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a77590e1ca67ea7733389e0ccc55f33b54f6384d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "parse_space",
						"t": "const char *(const char *, bool)",
						"i": "grammar_parser::parse_space(const char*,bool)",
						"r": "static const char *parse_space(const char *src, bool newline_ok)",
						"s": "grammar_parser",
						"u": "PARSE_SPACE",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "abd5760f1e5ff4947b643e0425f288932a17d54e"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "parse_name",
						"t": "const char *(const char *)",
						"i": "grammar_parser::parse_name(const char*)",
						"r": "static const char *parse_name(const char *src)",
						"s": "grammar_parser",
						"u": "PARSE_NAME",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8fb543ff8f868cdb7907a4bce18960fe4b4ba252"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "parse_char",
						"t": "std::pair<uint32_t, const char *> (const char *)",
						"i": "grammar_parser::parse_char(const char*)",
						"r": "static std::pair<uint32_t, const char *> parse_char(const char *src)",
						"s": "grammar_parser",
						"u": "PARSE_CHAR",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "06d612e2c011fd1926246508e72e0b006ffa593d"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "parse_alternates",
						"t": "const char *(parse_state &, const char *, const std::string &, uint32_t, bool)",
						"i": "grammar_parser::parse_alternates(parse_state&,const char*,const std::string&,uint32_t,bool)",
						"r": "const char *parse_alternates(parse_state& state, const char *src, const std::string& rule_name, uint32_t rule_id, bool is_nested)",
						"s": "grammar_parser",
						"u": "PARSE_ALTERNATES",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e9babcf7cde9cbb5a7f3cbd57a48f804192162ab"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "parse_sequence",
						"t": "const char *(parse_state &, const char *, const std::string &, int &, bool)",
						"i": "grammar_parser::parse_sequence(parse_state&,const char*,const std::string&,int&,bool)",
						"r": "static const char *parse_sequence(parse_state& state, const char *src, const std::string& rule_name, int& out_elements, bool is_nested)",
						"s": "grammar_parser",
						"u": "PARSE_SEQUENCE",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a1a649dbfaab3ab30f2d164db4ae1e49f6efebc4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parse_alternates",
						"t": "const char *(parse_state &, const char *, const std::string &, uint32_t, bool)",
						"i": "grammar_parser::parse_alternates(parse_state&,const char*,const std::string&,uint32_t,bool)",
						"r": "const char *parse_alternates(parse_state& state, const char *src, const std::string& rule_name, uint32_t rule_id, bool is_nested)",
						"s": "grammar_parser",
						"u": "PARSE_ALTERNATES",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "320cb72c114838e9d0b249e73cf82dd6f97af425"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "parse_rule",
						"t": "const char *(parse_state &, const char *)",
						"i": "grammar_parser::parse_rule(parse_state&,const char*)",
						"r": "static const char *parse_rule(parse_state& state, const char *src)",
						"s": "grammar_parser",
						"u": "PARSE_RULE",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "99835ad3b2f411bea93b8e64b7307a0900fd15dc"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parse",
						"t": "parse_state (const char *)",
						"i": "grammar_parser::parse(const char*)",
						"r": "parse_state parse(const char *src)",
						"s": "grammar_parser",
						"u": "PARSE",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4a6562c90fae010b61e96cf05877eb8ca438a88"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "print_grammar_char",
						"t": "void (FILE *, uint32_t)",
						"i": "grammar_parser::print_grammar_char(FILE*,uint32_t)",
						"r": "static void print_grammar_char(FILE *file, uint32_t c)",
						"s": "grammar_parser",
						"u": "PRINT_GRAMMAR_CHAR",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3498db2abfad939eba93385fb3b01f59af921c82"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "is_char_element",
						"t": "bool (int)",
						"i": "grammar_parser::is_char_element(int)",
						"r": "static bool is_char_element(int elem)",
						"s": "grammar_parser",
						"u": "IS_CHAR_ELEMENT",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b28ece4f2226a465d927c3822c38c5474e8ed393"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "print_rule_binary",
						"t": "void (FILE *, const int &)",
						"i": "grammar_parser::print_rule_binary(FILE*,const int&)",
						"r": "static void print_rule_binary(FILE *file, const int& rule)",
						"s": "grammar_parser",
						"u": "PRINT_RULE_BINARY",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b33c5dbf2c42a3f9f9d338055cb89d1d54dc0472"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "print_rule",
						"t": "void (FILE *, uint32_t, const int &, const int &)",
						"i": "grammar_parser::print_rule(FILE*,uint32_t,const int&,const int&)",
						"r": "static void print_rule(FILE *file, uint32_t rule_id, const int& rule, const int& symbol_id_names)",
						"s": "grammar_parser",
						"u": "PRINT_RULE",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dbd5d7eeb32a010370b67d4714576dee3297b1f6"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "print_grammar",
						"t": "void (FILE *, const parse_state &)",
						"i": "grammar_parser::print_grammar(FILE*,const parse_state&)",
						"r": "void print_grammar(FILE *file, const parse_state& state)",
						"s": "grammar_parser",
						"u": "PRINT_GRAMMAR",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b7835783fbf3bab89614d804bac93ef56a455d29"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "c_rules",
						"t": "int ()",
						"i": "grammar_parser::parse_state::c_rules()",
						"r": "int c_rules()",
						"s": "grammar_parser",
						"u": "C_RULES",
						"q": "grammar_parser::parse_state",
						"w": "GRAMMAR_PARSER::PARSE_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "91935b593cc940288d014316fa11f4ce5959b1e8"
							}
						]
					}
				]
			}
		},
		{
			"key": "sampling.cpp",
			"value": {
				"items": [
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_init",
						"t": "struct llama_sampling_context *(const struct llama_sampling_params &)",
						"i": "llama_sampling_init(const llama_sampling_params&)",
						"r": "llama_sampling_context *llama_sampling_init(const llama_sampling_params& params)",
						"s": "",
						"u": "LLAMA_SAMPLING_INIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4e1838d60318608e4816d4879c5452b701a690c6"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_free",
						"t": "void (struct llama_sampling_context *)",
						"i": "llama_sampling_free(llama_sampling_context*)",
						"r": "void llama_sampling_free(llama_sampling_context *ctx)",
						"s": "",
						"u": "LLAMA_SAMPLING_FREE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fc90f878a3ce684b99a3d8e191eaae089a615f16"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_reset",
						"t": "void (llama_sampling_context *)",
						"i": "llama_sampling_reset(llama_sampling_context*)",
						"r": "void llama_sampling_reset(llama_sampling_context *ctx)",
						"s": "",
						"u": "LLAMA_SAMPLING_RESET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9829466873c47f157d59b3715072e7097b8b4cb7"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_cp",
						"t": "void (llama_sampling_context *, llama_sampling_context *)",
						"i": "llama_sampling_cp(llama_sampling_context*,llama_sampling_context*)",
						"r": "void llama_sampling_cp(llama_sampling_context *src, llama_sampling_context *dst)",
						"s": "",
						"u": "LLAMA_SAMPLING_CP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3ab38d43a5c678af22c710a6461e97aedaf9ab93"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_last",
						"t": "int (llama_sampling_context *)",
						"i": "llama_sampling_last(llama_sampling_context*)",
						"r": "int llama_sampling_last(llama_sampling_context *ctx)",
						"s": "",
						"u": "LLAMA_SAMPLING_LAST",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8b7246645388c6029720ee1e8bf7de69d9a476bf"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_prev_str",
						"t": "std::string (llama_sampling_context *, llama_context *, int)",
						"i": "llama_sampling_prev_str(llama_sampling_context*,llama_context*,int)",
						"r": "std::string llama_sampling_prev_str(llama_sampling_context *ctx_sampling, llama_context *ctx_main, int n)",
						"s": "",
						"u": "LLAMA_SAMPLING_PREV_STR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3af1be185d7fb3ec8411423522c9036cc169b986"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_print",
						"t": "std::string (const llama_sampling_params &)",
						"i": "llama_sampling_print(const llama_sampling_params&)",
						"r": "std::string llama_sampling_print(const llama_sampling_params& params)",
						"s": "",
						"u": "LLAMA_SAMPLING_PRINT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b3e2710819eee98b29ca81a7b403fdfbcfeff744"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_order_print",
						"t": "std::string (const llama_sampling_params &)",
						"i": "llama_sampling_order_print(const llama_sampling_params&)",
						"r": "std::string llama_sampling_order_print(const llama_sampling_params& params)",
						"s": "",
						"u": "LLAMA_SAMPLING_ORDER_PRINT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "143349bfba8a3c316a698c528a7edc8d83c13b2d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "sampler_queue",
						"t": "void (struct llama_context *, const llama_sampling_params &, int &, size_t &)",
						"i": "sampler_queue(llama_context*,const llama_sampling_params&,int&,size_t&)",
						"r": "static void sampler_queue(llama_context *ctx_main, const llama_sampling_params& params, int& cur_p, size_t& min_keep)",
						"s": "",
						"u": "SAMPLER_QUEUE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "495498997205433d3b24bd1e4fadcd6ee9852139"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_sample_impl",
						"t": "int (struct llama_sampling_context *, struct llama_context *, struct llama_context *, const int, bool)",
						"i": "LlamaCppResponse::llama_sampling_sample_impl(llama_sampling_context*,llama_context*,llama_context*,const int,bool)",
						"r": "int llama_sampling_sample_impl(llama_sampling_context *ctx_sampling, llama_context *ctx_main, llama_context *ctx_cfg, const int idx, bool is_resampling)",
						"s": "",
						"u": "LLAMA_SAMPLING_SAMPLE_IMPL",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8786e90a867aec1bfe7a0e57418cec2fa2a13c78"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_sample",
						"t": "int (struct llama_sampling_context *, struct llama_context *, struct llama_context *, const int)",
						"i": "LlamaCppResponse::llama_sampling_sample(llama_sampling_context*,llama_context*,llama_context*,const int)",
						"r": "int llama_sampling_sample(llama_sampling_context *ctx_sampling, llama_context *ctx_main, llama_context *ctx_cfg, const int idx)",
						"s": "",
						"u": "LLAMA_SAMPLING_SAMPLE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2589e1bb1b60c3f6961b2822fd6e032041b5c58"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_accept",
						"t": "void (struct llama_sampling_context *, struct llama_context *, int, bool)",
						"i": "llama_sampling_accept(llama_sampling_context*,llama_context*,int,bool)",
						"r": "void llama_sampling_accept(llama_sampling_context *ctx_sampling, llama_context *ctx_main, int id, bool apply_grammar)",
						"s": "",
						"u": "LLAMA_SAMPLING_ACCEPT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "33eb134841c97e158e33e5a3ac96a1e01b732b00"
							}
						]
					}
				]
			}
		},
		{
			"key": "train.h",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "LLAMA_TRAIN_MAX_NODES",
						"t": "",
						"i": "LLAMA_TRAIN_MAX_NODES",
						"r": "LLAMA_TRAIN_MAX_NODES",
						"s": "",
						"u": "LLAMA_TRAIN_MAX_NODES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8acc5a3fe609cfeedcef7c4bfaeef944312c0a7d"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mt19937_state",
						"t": "mt19937_state",
						"i": "mt19937_state",
						"r": "typedef std::string mt19937_state",
						"s": "",
						"u": "MT19937_STATE",
						"q": "",
						"w": "",
						"y": "std::string",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "76fec244ad4e7ab3d15e179f159f829a40ccb374"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_state",
						"t": "train_state",
						"i": "train_state",
						"r": "train_state",
						"s": "",
						"u": "TRAIN_STATE",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50a079dc7b1ec1dbf1dc6f6e47e67c6577a8bdb0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "opt",
						"t": "struct ggml_opt_context *",
						"i": "train_state::opt",
						"r": "ggml_opt_context *opt",
						"s": "",
						"u": "OPT",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3151fa71810a32db51808576ac4405fc2da9da26"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_its",
						"t": "uint64_t",
						"i": "train_state::train_its",
						"r": "uint64_t train_its",
						"s": "",
						"u": "TRAIN_ITS",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4f538f6748a09ab1fe0b5d94cbf38809fe8db75f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_samples",
						"t": "uint64_t",
						"i": "train_state::train_samples",
						"r": "uint64_t train_samples",
						"s": "",
						"u": "TRAIN_SAMPLES",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db4bfc691dceed5a5e7eef837428da1598ba98f3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_tokens",
						"t": "uint64_t",
						"i": "train_state::train_tokens",
						"r": "uint64_t train_tokens",
						"s": "",
						"u": "TRAIN_TOKENS",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fed077cdbbc20427b7468cc0bacb8f25d163b08e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_epochs",
						"t": "uint64_t",
						"i": "train_state::train_epochs",
						"r": "uint64_t train_epochs",
						"s": "",
						"u": "TRAIN_EPOCHS",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e1e27bcc26129f758048e9e928f492d617032f0b"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffle_samples_hash",
						"t": "size_t",
						"i": "train_state::shuffle_samples_hash",
						"r": "size_t shuffle_samples_hash",
						"s": "",
						"u": "SHUFFLE_SAMPLES_HASH",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7209f6a3023ddc6385c3addde2ce796490d2dcd8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffle_rng_state_current",
						"t": "mt19937_state",
						"i": "train_state::shuffle_rng_state_current",
						"r": "mt19937_state shuffle_rng_state_current",
						"s": "",
						"u": "SHUFFLE_RNG_STATE_CURRENT",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8bf7e89abc8ea39f08afee202def60dc43540bbf"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffle_rng_state_next",
						"t": "mt19937_state",
						"i": "train_state::shuffle_rng_state_next",
						"r": "mt19937_state shuffle_rng_state_next",
						"s": "",
						"u": "SHUFFLE_RNG_STATE_NEXT",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09f3f6b1b80a86aa10628afbbef950a7772e25da"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffle_sample_count",
						"t": "size_t",
						"i": "train_state::shuffle_sample_count",
						"r": "size_t shuffle_sample_count",
						"s": "",
						"u": "SHUFFLE_SAMPLE_COUNT",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "351d2c1bff3d6094017837098e09f486624c02cf"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffle_next_sample",
						"t": "size_t",
						"i": "train_state::shuffle_next_sample",
						"r": "size_t shuffle_next_sample",
						"s": "",
						"u": "SHUFFLE_NEXT_SAMPLE",
						"q": "train_state",
						"w": "TRAIN_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "db346e59a41454b0dc8117c2b85f30f87b2ee182"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_params_common",
						"t": "train_params_common",
						"i": "train_params_common",
						"r": "train_params_common",
						"s": "",
						"u": "TRAIN_PARAMS_COMMON",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "09e9c958529417a37e0a4af8a406c68f1e736112"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fn_train_data",
						"t": "const char *",
						"i": "train_params_common::fn_train_data",
						"r": "const char *fn_train_data",
						"s": "",
						"u": "FN_TRAIN_DATA",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d562fc7a926618c134af3948e67ac51db7266441"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fn_checkpoint_in",
						"t": "const char *",
						"i": "train_params_common::fn_checkpoint_in",
						"r": "const char *fn_checkpoint_in",
						"s": "",
						"u": "FN_CHECKPOINT_IN",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6affdb1804f5baa183771d43d572c10f2342a037"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fn_checkpoint_out",
						"t": "const char *",
						"i": "train_params_common::fn_checkpoint_out",
						"r": "const char *fn_checkpoint_out",
						"s": "",
						"u": "FN_CHECKPOINT_OUT",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "009a9e3965cd875140ad4128ca7cc4c2c7bbc9fe"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "pattern_fn_it",
						"t": "const char *",
						"i": "train_params_common::pattern_fn_it",
						"r": "const char *pattern_fn_it",
						"s": "",
						"u": "PATTERN_FN_IT",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9aae78eacfaacf7ba2a714b2322fadccf5a80387"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fn_latest",
						"t": "const char *",
						"i": "train_params_common::fn_latest",
						"r": "const char *fn_latest",
						"s": "",
						"u": "FN_LATEST",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f77cc07dcfa61fa22b44cf2858de9cb0c2a86bc5"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "print_usage",
						"t": "bool",
						"i": "train_params_common::print_usage",
						"r": "bool print_usage",
						"s": "",
						"u": "PRINT_USAGE",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "040c285471192496c976c9dcf26e273991a21cbb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "save_every",
						"t": "int",
						"i": "train_params_common::save_every",
						"r": "int save_every",
						"s": "",
						"u": "SAVE_EVERY",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f82c54d4cafe4aa66d767059516e08335fab3138"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "seed",
						"t": "uint32_t",
						"i": "train_params_common::seed",
						"r": "uint32_t seed",
						"s": "",
						"u": "SEED",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf828c798a8e598cdd15b7b53461464b1836a114"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_ctx",
						"t": "int",
						"i": "train_params_common::n_ctx",
						"r": "int n_ctx",
						"s": "",
						"u": "N_CTX",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7cced9efdb434fdbbe4e6202bd389fb8da1f522c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_threads",
						"t": "int",
						"i": "train_params_common::n_threads",
						"r": "int n_threads",
						"s": "",
						"u": "N_THREADS",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "531583aefe24b269cf89241ac759bc018598f20e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_batch",
						"t": "int",
						"i": "train_params_common::n_batch",
						"r": "int n_batch",
						"s": "",
						"u": "N_BATCH",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "89c70e06b33de121a70b47b9fe9bc1282da4c50c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_gradient_accumulation",
						"t": "int",
						"i": "train_params_common::n_gradient_accumulation",
						"r": "int n_gradient_accumulation",
						"s": "",
						"u": "N_GRADIENT_ACCUMULATION",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5884fdeeb0dbb4de2455b5475eecff36670d10f3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_epochs",
						"t": "int",
						"i": "train_params_common::n_epochs",
						"r": "int n_epochs",
						"s": "",
						"u": "N_EPOCHS",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5bfb483a0eec69c704b9e61b69116ad7e0af9354"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_gpu_layers",
						"t": "int",
						"i": "train_params_common::n_gpu_layers",
						"r": "int n_gpu_layers",
						"s": "",
						"u": "N_GPU_LAYERS",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9261952aa5f69429f4662fe3a77fd28470125a1d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "custom_n_ctx",
						"t": "bool",
						"i": "train_params_common::custom_n_ctx",
						"r": "bool custom_n_ctx",
						"s": "",
						"u": "CUSTOM_N_CTX",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8028eacc2f9a5ef3cdf7de95e19bf582ab71da83"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "use_flash",
						"t": "bool",
						"i": "train_params_common::use_flash",
						"r": "bool use_flash",
						"s": "",
						"u": "USE_FLASH",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ebb289d2adffd8ce44d124ec1cd5342a631f0f2f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "use_checkpointing",
						"t": "bool",
						"i": "train_params_common::use_checkpointing",
						"r": "bool use_checkpointing",
						"s": "",
						"u": "USE_CHECKPOINTING",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f2056c77df7bede87efef5e33e28bba7f3f41d54"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sample_start",
						"t": "std::string",
						"i": "train_params_common::sample_start",
						"r": "std::string sample_start",
						"s": "",
						"u": "SAMPLE_START",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6d00c9ae2deb07df8609a5b5b0e811904631daa"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "include_sample_start",
						"t": "bool",
						"i": "train_params_common::include_sample_start",
						"r": "bool include_sample_start",
						"s": "",
						"u": "INCLUDE_SAMPLE_START",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ab65e86fe0b396d2420369ca0f64b3a33a5a5b15"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "escape",
						"t": "bool",
						"i": "train_params_common::escape",
						"r": "bool escape",
						"s": "",
						"u": "ESCAPE",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "11966045d0253d7405ad2acf226b148fa2fa2688"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "overlapping_samples",
						"t": "bool",
						"i": "train_params_common::overlapping_samples",
						"r": "bool overlapping_samples",
						"s": "",
						"u": "OVERLAPPING_SAMPLES",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6f97498604be643d75511c06db8b02db84435557"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fill_with_next_samples",
						"t": "bool",
						"i": "train_params_common::fill_with_next_samples",
						"r": "bool fill_with_next_samples",
						"s": "",
						"u": "FILL_WITH_NEXT_SAMPLES",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7aab6186b6d8262ab372f1ee0821bf11ea107b1c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "separate_with_eos",
						"t": "bool",
						"i": "train_params_common::separate_with_eos",
						"r": "bool separate_with_eos",
						"s": "",
						"u": "SEPARATE_WITH_EOS",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "65f86fd6b68c31d53a0dc30ffabb500091db956f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "separate_with_bos",
						"t": "bool",
						"i": "train_params_common::separate_with_bos",
						"r": "bool separate_with_bos",
						"s": "",
						"u": "SEPARATE_WITH_BOS",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e536db6b02a8a7d766a62e7325a422224dbc7a22"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "sample_random_offsets",
						"t": "bool",
						"i": "train_params_common::sample_random_offsets",
						"r": "bool sample_random_offsets",
						"s": "",
						"u": "SAMPLE_RANDOM_OFFSETS",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "837bbf031640a6a9982666ad67eaf32375bf3f52"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "force_reshuffle",
						"t": "bool",
						"i": "train_params_common::force_reshuffle",
						"r": "bool force_reshuffle",
						"s": "",
						"u": "FORCE_RESHUFFLE",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc6825ffb5866bd097950a3904a00802faa2e951"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "warmup",
						"t": "int",
						"i": "train_params_common::warmup",
						"r": "int warmup",
						"s": "",
						"u": "WARMUP",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5eea76ed36d537f92d85ebb4b06b2a1195812cd8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cos_decay_steps",
						"t": "int",
						"i": "train_params_common::cos_decay_steps",
						"r": "int cos_decay_steps",
						"s": "",
						"u": "COS_DECAY_STEPS",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d5be4c6ac44227d37edef464874912609989d94"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cos_decay_restart",
						"t": "float",
						"i": "train_params_common::cos_decay_restart",
						"r": "float cos_decay_restart",
						"s": "",
						"u": "COS_DECAY_RESTART",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7dd621fcd00b72e01359489a9c0931fe46f14c98"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cos_decay_min",
						"t": "float",
						"i": "train_params_common::cos_decay_min",
						"r": "float cos_decay_min",
						"s": "",
						"u": "COS_DECAY_MIN",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4dc1f4d79170b557a0ea69093bfe2961950ccac"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "enable_restart",
						"t": "bool",
						"i": "train_params_common::enable_restart",
						"r": "bool enable_restart",
						"s": "",
						"u": "ENABLE_RESTART",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "463591610d8c486fadbf4b8312fa2a7b472948b0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "opt_past",
						"t": "int",
						"i": "train_params_common::opt_past",
						"r": "int opt_past",
						"s": "",
						"u": "OPT_PAST",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c10d7d62239afd79376d05390d6b304a0c311d2c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "opt_delta",
						"t": "float",
						"i": "train_params_common::opt_delta",
						"r": "float opt_delta",
						"s": "",
						"u": "OPT_DELTA",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c3da88abe6dc430636ee255e9bc2303803ffe82"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "opt_max_no_improvement",
						"t": "int",
						"i": "train_params_common::opt_max_no_improvement",
						"r": "int opt_max_no_improvement",
						"s": "",
						"u": "OPT_MAX_NO_IMPROVEMENT",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01864ab827556a79f6cc7ac790c98b30bed44f6c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_n_iter",
						"t": "int",
						"i": "train_params_common::adam_n_iter",
						"r": "int adam_n_iter",
						"s": "",
						"u": "ADAM_N_ITER",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f86b8a89255a78c21fec2ac86edb4ccb8891da5c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_alpha",
						"t": "float",
						"i": "train_params_common::adam_alpha",
						"r": "float adam_alpha",
						"s": "",
						"u": "ADAM_ALPHA",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6f42e5ca9a5984ee3d91198b056b64aa1ebd28f1"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_min_alpha",
						"t": "float",
						"i": "train_params_common::adam_min_alpha",
						"r": "float adam_min_alpha",
						"s": "",
						"u": "ADAM_MIN_ALPHA",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7d8c495c8dea5a374b5034e2d580d5638eacc167"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_decay",
						"t": "float",
						"i": "train_params_common::adam_decay",
						"r": "float adam_decay",
						"s": "",
						"u": "ADAM_DECAY",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "812538eb6724c3c03aec5eb960b50cc56592356a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_decay_min_ndim",
						"t": "int",
						"i": "train_params_common::adam_decay_min_ndim",
						"r": "int adam_decay_min_ndim",
						"s": "",
						"u": "ADAM_DECAY_MIN_NDIM",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38f0eaaa8c84b704dcf0ff80c978a400d90820dc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_beta1",
						"t": "float",
						"i": "train_params_common::adam_beta1",
						"r": "float adam_beta1",
						"s": "",
						"u": "ADAM_BETA1",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bd6ab2bf52b2fa48b7c10f4a8bfe2611c27900c3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_beta2",
						"t": "float",
						"i": "train_params_common::adam_beta2",
						"r": "float adam_beta2",
						"s": "",
						"u": "ADAM_BETA2",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f8a7103d3d1f53388aa49b59590dbf2ae447990a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_gclip",
						"t": "float",
						"i": "train_params_common::adam_gclip",
						"r": "float adam_gclip",
						"s": "",
						"u": "ADAM_GCLIP",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8888dbf0ac1ee8d71be911295add762eaf07c8fc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "adam_eps_f",
						"t": "float",
						"i": "train_params_common::adam_eps_f",
						"r": "float adam_eps_f",
						"s": "",
						"u": "ADAM_EPS_F",
						"q": "train_params_common",
						"w": "TRAIN_PARAMS_COMMON",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "19d79623bc22998451e69a47cc646923e82c60f7"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "save_train_files_callback",
						"t": "save_train_files_callback",
						"i": "save_train_files_callback",
						"r": "typedef void (*save_train_files_callback)(void *, train_state *)",
						"s": "",
						"u": "SAVE_TRAIN_FILES_CALLBACK",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "798d39a4a5fbb26e76987fd320c98496d81ded3b"
							}
						]
					},
					{
						"k": 10,
						"d": true,
						"iv": false,
						"is": false,
						"n": "data",
						"t": "void *",
						"i": "data",
						"r": "void *data",
						"s": "",
						"u": "DATA",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a37bd2be7f3e841fe61c419ce331260cefe3ec14"
							}
						]
					},
					{
						"k": 10,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train",
						"t": "struct train_state *",
						"i": "train",
						"r": "train_state *train",
						"s": "",
						"u": "TRAIN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "98fc3079e8dba6e5fdaea7b99dba4a49c075a372"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_opt_callback_data",
						"t": "train_opt_callback_data",
						"i": "train_opt_callback_data",
						"r": "train_opt_callback_data",
						"s": "",
						"u": "TRAIN_OPT_CALLBACK_DATA",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc8f09338cfba0648ab9cc55466cfea43cac6044"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "params",
						"t": "struct train_params_common *",
						"i": "train_opt_callback_data::params",
						"r": "train_params_common *params",
						"s": "",
						"u": "PARAMS",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d4286b4b51f6b795dca0aa4be30f40dbcfe9fd66"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train",
						"t": "struct train_state *",
						"i": "train_opt_callback_data::train",
						"r": "train_state *train",
						"s": "",
						"u": "TRAIN",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9c9ad2e8166520f53e485711a9ea4f7eac64743a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "save_cb",
						"t": "save_train_files_callback",
						"i": "train_opt_callback_data::save_cb",
						"r": "save_train_files_callback save_cb",
						"s": "",
						"u": "SAVE_CB",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c7345455512e178211c4df5eefdffb49868c586"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "save_data",
						"t": "void *",
						"i": "train_opt_callback_data::save_data",
						"r": "void *save_data",
						"s": "",
						"u": "SAVE_DATA",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6722cc2bef2fc2296b87c7d168b3a82cc3c3d513"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "lctx",
						"t": "struct llama_context *",
						"i": "train_opt_callback_data::lctx",
						"r": "llama_context *lctx",
						"s": "",
						"u": "LCTX",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a45aeaa881bedaf1184bab0d5176766e19dce7f3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "last_save_iter",
						"t": "int",
						"i": "train_opt_callback_data::last_save_iter",
						"r": "int last_save_iter",
						"s": "",
						"u": "LAST_SAVE_ITER",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c766fab1c6d2332c2881224baa6d2d0065f68db7"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "tokens_data",
						"t": "int *",
						"i": "train_opt_callback_data::tokens_data",
						"r": "int *tokens_data",
						"s": "",
						"u": "TOKENS_DATA",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45a536a947e2b9de57613df81ef7d51bf3a039c3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "tokens_size",
						"t": "size_t",
						"i": "train_opt_callback_data::tokens_size",
						"r": "size_t tokens_size",
						"s": "",
						"u": "TOKENS_SIZE",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "94f4f17a090614484c1ea4134f2354a3f6421bd8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "samples_begin",
						"t": "size_t *",
						"i": "train_opt_callback_data::samples_begin",
						"r": "size_t *samples_begin",
						"s": "",
						"u": "SAMPLES_BEGIN",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f1e283804b33c17e2a700729c7c497e3a6bdd26f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "samples_size",
						"t": "size_t *",
						"i": "train_opt_callback_data::samples_size",
						"r": "size_t *samples_size",
						"s": "",
						"u": "SAMPLES_SIZE",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "67f2dd55c9c651d368355ac39658bcb74a157acf"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffled_samples_offs",
						"t": "size_t *",
						"i": "train_opt_callback_data::shuffled_samples_offs",
						"r": "size_t *shuffled_samples_offs",
						"s": "",
						"u": "SHUFFLED_SAMPLES_OFFS",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "271ac7dd7bab01132230f6ae07d79052c03a78e3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffled_samples_begin",
						"t": "size_t *",
						"i": "train_opt_callback_data::shuffled_samples_begin",
						"r": "size_t *shuffled_samples_begin",
						"s": "",
						"u": "SHUFFLED_SAMPLES_BEGIN",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "263f9b336f7e2ede0ed2194f362a806158ed738e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffled_samples_size",
						"t": "size_t *",
						"i": "train_opt_callback_data::shuffled_samples_size",
						"r": "size_t *shuffled_samples_size",
						"s": "",
						"u": "SHUFFLED_SAMPLES_SIZE",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88ec7f9cd04090dfad8bf3c6dd5099b68a9f44df"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "samples_count",
						"t": "size_t",
						"i": "train_opt_callback_data::samples_count",
						"r": "size_t samples_count",
						"s": "",
						"u": "SAMPLES_COUNT",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dac0fbeb71b238798631c0302e82bebb8aa5794e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "tokens_input",
						"t": "struct ggml_tensor *",
						"i": "train_opt_callback_data::tokens_input",
						"r": "ggml_tensor *tokens_input",
						"s": "",
						"u": "TOKENS_INPUT",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d799944d2769725490f5bfe2ef94330a00c19a9d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "target_probs",
						"t": "struct ggml_tensor *",
						"i": "train_opt_callback_data::target_probs",
						"r": "ggml_tensor *target_probs",
						"s": "",
						"u": "TARGET_PROBS",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0d98a988a8bb1e39c6277a8c27d20b0e79f4eb21"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "first_iter",
						"t": "int",
						"i": "train_opt_callback_data::first_iter",
						"r": "int first_iter",
						"s": "",
						"u": "FIRST_ITER",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "662179e92275a5a761d39cc293151aff5d52bb3c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "first_epoch",
						"t": "int",
						"i": "train_opt_callback_data::first_epoch",
						"r": "int first_epoch",
						"s": "",
						"u": "FIRST_EPOCH",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9968abe64ac03ee41dd245b35ddba91af711930d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "iter_at_last_epoch",
						"t": "int",
						"i": "train_opt_callback_data::iter_at_last_epoch",
						"r": "int iter_at_last_epoch",
						"s": "",
						"u": "ITER_AT_LAST_EPOCH",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "94e035c351d31abf42f00e8a484807c055d2b641"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "last_time",
						"t": "int64_t",
						"i": "train_opt_callback_data::last_time",
						"r": "int64_t last_time",
						"s": "",
						"u": "LAST_TIME",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de963c266edc109a18dc84de032475cd532e33ee"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "millis_per_iter",
						"t": "double",
						"i": "train_opt_callback_data::millis_per_iter",
						"r": "double millis_per_iter",
						"s": "",
						"u": "MILLIS_PER_ITER",
						"q": "train_opt_callback_data",
						"w": "TRAIN_OPT_CALLBACK_DATA",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5b23143a03e7650b6e9a5b6ae6161831240ca2ea"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "init_train_state",
						"t": "struct train_state *()",
						"i": "init_train_state()",
						"r": "train_state *init_train_state()",
						"s": "",
						"u": "INIT_TRAIN_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7b0977abd6a903f23f004f0ad2f221f95906261a"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "free_train_state",
						"t": "void (struct train_state *)",
						"i": "free_train_state(train_state*)",
						"r": "void free_train_state(train_state *state)",
						"s": "",
						"u": "FREE_TRAIN_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c28da1e9a6fb319a47d2872464a916d7a26deac"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "get_default_train_params_common",
						"t": "struct train_params_common ()",
						"i": "get_default_train_params_common()",
						"r": "train_params_common get_default_train_params_common()",
						"s": "",
						"u": "GET_DEFAULT_TRAIN_PARAMS_COMMON",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "945317f463b45a3bcde8781729dbbc7afe1be564"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "print_common_train_usage",
						"t": "void (int, char **, const struct train_params_common *)",
						"i": "print_common_train_usage(int,char**,const train_params_common*)",
						"r": "void print_common_train_usage(int, char **argv, const train_params_common *params)",
						"s": "",
						"u": "PRINT_COMMON_TRAIN_USAGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a6860d319e6164d400d8df17086c3d3123551de"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "consume_common_train_arg",
						"t": "bool (int, char **, int *, struct train_params_common *, bool *)",
						"i": "consume_common_train_arg(int,char**,int*,train_params_common*,bool*)",
						"r": "bool consume_common_train_arg(int argc, char **argv, int *idx, train_params_common *params, bool *invalid_param)",
						"s": "",
						"u": "CONSUME_COMMON_TRAIN_ARG",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8e89b38c6f9393fa1a2a28024a40d5c5ec26a027"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "finish_processing_train_args",
						"t": "void (struct train_params_common *)",
						"i": "finish_processing_train_args(train_params_common*)",
						"r": "void finish_processing_train_args(train_params_common *params)",
						"s": "",
						"u": "FINISH_PROCESSING_TRAIN_ARGS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "591fb341b46169f256317af0e54dd3b4c64f4c74"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "random_normal_distribution",
						"t": "random_normal_distribution",
						"i": "random_normal_distribution",
						"r": "random_normal_distribution",
						"s": "",
						"u": "RANDOM_NORMAL_DISTRIBUTION",
						"q": "random_normal_distribution",
						"w": "RANDOM_NORMAL_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e4bd788e8610ab162e21cd20986c91aa9f98537f"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "random_uniform_distribution",
						"t": "random_uniform_distribution",
						"i": "random_uniform_distribution",
						"r": "random_uniform_distribution",
						"s": "",
						"u": "RANDOM_UNIFORM_DISTRIBUTION",
						"q": "random_uniform_distribution",
						"w": "RANDOM_UNIFORM_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eb45a37b32820035e5edf2b73123c2c547e27518"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "init_random_normal_distribution",
						"t": "struct random_normal_distribution *(int, float, float, float, float)",
						"i": "init_random_normal_distribution(int,float,float,float,float)",
						"r": "random_normal_distribution *init_random_normal_distribution(int seed, float mean, float std, float min, float max)",
						"s": "",
						"u": "INIT_RANDOM_NORMAL_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c2b6ad62a66680b3ffe5535cb4b419bee54a25df"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "init_random_uniform_distribution",
						"t": "struct random_uniform_distribution *(int, float, float)",
						"i": "init_random_uniform_distribution(int,float,float)",
						"r": "random_uniform_distribution *init_random_uniform_distribution(int seed, float min, float max)",
						"s": "",
						"u": "INIT_RANDOM_UNIFORM_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3831cd8d1d7a313f2111d74f43658c2cd25dd118"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "free_random_normal_distribution",
						"t": "void (struct random_normal_distribution *)",
						"i": "free_random_normal_distribution(random_normal_distribution*)",
						"r": "void free_random_normal_distribution(random_normal_distribution *rnd)",
						"s": "",
						"u": "FREE_RANDOM_NORMAL_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "519bb9a54c11ce66ad278e6b1930a7b1f43538fd"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "free_random_uniform_distribution",
						"t": "void (struct random_uniform_distribution *)",
						"i": "free_random_uniform_distribution(random_uniform_distribution*)",
						"r": "void free_random_uniform_distribution(random_uniform_distribution *rnd)",
						"s": "",
						"u": "FREE_RANDOM_UNIFORM_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bfdbcfbb1c6c0c07cb31b34db01a6d87d79be9c8"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "randomize_tensor_normal",
						"t": "struct ggml_tensor *(struct ggml_tensor *, struct random_normal_distribution *)",
						"i": "randomize_tensor_normal(ggml_tensor*,random_normal_distribution*)",
						"r": "ggml_tensor *randomize_tensor_normal(ggml_tensor *tensor, random_normal_distribution *rnd)",
						"s": "",
						"u": "RANDOMIZE_TENSOR_NORMAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e37924e350e407fd3570ef229b203096359ed983"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "randomize_tensor_uniform",
						"t": "struct ggml_tensor *(struct ggml_tensor *, struct random_uniform_distribution *)",
						"i": "randomize_tensor_uniform(ggml_tensor*,random_uniform_distribution*)",
						"r": "ggml_tensor *randomize_tensor_uniform(ggml_tensor *tensor, random_uniform_distribution *rnd)",
						"s": "",
						"u": "RANDOMIZE_TENSOR_UNIFORM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d3aa00dd80e5886f29ece2e89ede1e61b92e387c"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "frand",
						"t": "float ()",
						"i": "frand()",
						"r": "float frand()",
						"s": "",
						"u": "FRAND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ff5b132482d4d838bdda09478eeb33e14bf30a5b"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "frand_normal",
						"t": "float (struct random_normal_distribution *)",
						"i": "frand_normal(random_normal_distribution*)",
						"r": "float frand_normal(random_normal_distribution *rnd)",
						"s": "",
						"u": "FRAND_NORMAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b7b55ffdad11c42ea0aed7c777b9b6607719bcd3"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "frand_uniform",
						"t": "float (struct random_uniform_distribution *)",
						"i": "frand_uniform(random_uniform_distribution*)",
						"r": "float frand_uniform(random_uniform_distribution *rnd)",
						"s": "",
						"u": "FRAND_UNIFORM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "553531dd2a75df012f58af49ee4848635ded2cec"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "clamp",
						"t": "int (const int, const int, const int)",
						"i": "clamp(const int,const int,const int)",
						"r": "int clamp(const int v, const int min, const int max)",
						"s": "",
						"u": "CLAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4638c57ecd47701e5520a189a9d64263df135bc6"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "fclamp",
						"t": "float (const float, const float, const float)",
						"i": "fclamp(const float,const float,const float)",
						"r": "float fclamp(const float v, const float min, const float max)",
						"s": "",
						"u": "FCLAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d1d25972a6ab89de670f43a5c2a814921d0034c"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "assert_shape_1d",
						"t": "void (struct ggml_tensor *, int64_t)",
						"i": "assert_shape_1d(ggml_tensor*,int64_t)",
						"r": "void assert_shape_1d(ggml_tensor *tensor, int64_t ne0)",
						"s": "",
						"u": "ASSERT_SHAPE_1D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2bfb5dd74f777c816a2fc65832c75316ed0872ab"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "assert_shape_2d",
						"t": "void (struct ggml_tensor *, int64_t, int64_t)",
						"i": "assert_shape_2d(ggml_tensor*,int64_t,int64_t)",
						"r": "void assert_shape_2d(ggml_tensor *tensor, int64_t ne0, int64_t ne1)",
						"s": "",
						"u": "ASSERT_SHAPE_2D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6db7a96c47bfe8de5a09c2ed0d31459333ea9de4"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "assert_shape_3d",
						"t": "void (struct ggml_tensor *, int64_t, int64_t, int64_t)",
						"i": "assert_shape_3d(ggml_tensor*,int64_t,int64_t,int64_t)",
						"r": "void assert_shape_3d(ggml_tensor *tensor, int64_t ne0, int64_t ne1, int64_t ne2)",
						"s": "",
						"u": "ASSERT_SHAPE_3D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ce4f4df8c1d08be272a829bdf04906f4be52e13"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "assert_shape_4d",
						"t": "void (struct ggml_tensor *, int64_t, int64_t, int64_t, int64_t)",
						"i": "assert_shape_4d(ggml_tensor*,int64_t,int64_t,int64_t,int64_t)",
						"r": "void assert_shape_4d(ggml_tensor *tensor, int64_t ne0, int64_t ne1, int64_t ne2, int64_t ne3)",
						"s": "",
						"u": "ASSERT_SHAPE_4D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f484e18474f0be2246f92201193b0fae53acfd1"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "tokenize_file",
						"t": "size_t (struct llama_context *, const char *, const std::string &, bool, bool, unsigned int, int &, int &, int &)",
						"i": "tokenize_file(llama_context*,const char*,const std::string&,bool,bool,unsigned int,int&,int&,int&)",
						"r": "size_t tokenize_file(llama_context *lctx, const char *filename, const std::string& sample_start, bool include_sample_start, bool overlapping_samples, unsigned int context_length, int& out_tokens, int& out_samples_begin, int& out_samples_size)",
						"s": "",
						"u": "TOKENIZE_FILE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cd93e3659563331c02752558f1004d5d33941fea"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "get_example_targets_batch",
						"t": "int64_t (struct llama_context *, struct ggml_tensor *, struct ggml_tensor *, int64_t, const size_t *, const size_t *, const size_t *, size_t, const int *, size_t, bool, bool, bool, bool)",
						"i": "get_example_targets_batch(llama_context*,ggml_tensor*,ggml_tensor*,int64_t,const size_t*,const size_t*,const size_t*,size_t,const int*,size_t,bool,bool,bool,bool)",
						"r": "int64_t get_example_targets_batch(llama_context *lctx, ggml_tensor *tokens_input, ggml_tensor *target_probs, int64_t example_id, const size_t *samples_offs, const size_t *samples_begin, const size_t *samples_size, size_t samples_count, const int *train_data, size_t n_train_data, bool separate_with_eos, bool separate_with_bos, bool fill_with_next_samples, bool sample_random_offsets)",
						"s": "",
						"u": "GET_EXAMPLE_TARGETS_BATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "da40d3f0e2625aacf22f3cb418e65af925d6e5a3"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mt19937_set_state",
						"t": "void (std::mt19937 &, const mt19937_state &)",
						"i": "mt19937_set_state(std::mt19937&,const mt19937_state&)",
						"r": "void mt19937_set_state(std::mt19937& rng, const mt19937_state& rng_state)",
						"s": "",
						"u": "MT19937_SET_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6a8268f2df78a9e3e7e2be06e46ef867bb1aa97"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mt19937_get_state",
						"t": "mt19937_state (const std::mt19937 &)",
						"i": "mt19937_get_state(const std::mt19937&)",
						"r": "mt19937_state mt19937_get_state(const std::mt19937& rng)",
						"s": "",
						"u": "MT19937_GET_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3220db60f1488cb100b5a8d25b8f742a6b7afe93"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "mt19937_seed_to_state",
						"t": "mt19937_state (unsigned int)",
						"i": "mt19937_seed_to_state(unsigned int)",
						"r": "mt19937_state mt19937_seed_to_state(unsigned int seed)",
						"s": "",
						"u": "MT19937_SEED_TO_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d2d492327e1947dfe2a7ed928c6b595fb0b631a"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "shuffle_samples",
						"t": "mt19937_state (const mt19937_state &, size_t *, size_t *, size_t *, const size_t *, const size_t *, size_t)",
						"i": "shuffle_samples(const mt19937_state&,size_t*,size_t*,size_t*,const size_t*,const size_t*,size_t)",
						"r": "mt19937_state shuffle_samples(const mt19937_state& rng_state, size_t *shuffled_offs, size_t *shuffled_begins, size_t *shuffled_sizes, const size_t *begins, const size_t *sizes, size_t count)",
						"s": "",
						"u": "SHUFFLE_SAMPLES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "962247642acf55fc1863650af894e492e5b0899d"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "hash_combine",
						"t": "size_t (size_t, size_t)",
						"i": "hash_combine(size_t,size_t)",
						"r": "size_t hash_combine(size_t h1, size_t h2)",
						"s": "",
						"u": "HASH_COMBINE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e0504d48350e0e445a71189b310c7f4b002ce6cb"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "compute_samples_hash",
						"t": "size_t (const char *, const size_t *, const size_t *, size_t)",
						"i": "compute_samples_hash(const char*,const size_t*,const size_t*,size_t)",
						"r": "size_t compute_samples_hash(const char *fn, const size_t *samples_begin, const size_t *samples_size, size_t sample_count)",
						"s": "",
						"u": "COMPUTE_SAMPLES_HASH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "56bdf72c47852378c655bb04e3fe2713f7d37418"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "replace_str",
						"t": "std::string (const char *, const char *, const char *)",
						"i": "replace_str(const char*,const char*,const char*)",
						"r": "std::string replace_str(const char *s, const char *needle, const char *replacement)",
						"s": "",
						"u": "REPLACE_STR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "77695660a8ee76da06105b2c508de7a8f303f495"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "print_duration",
						"t": "void (double)",
						"i": "print_duration(double)",
						"r": "void print_duration(double milliseconds)",
						"s": "",
						"u": "PRINT_DURATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af8fa8d5f68003a0c36adbd1bacd62ffc4879f85"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "cosine_decay",
						"t": "float (int64_t, int64_t, float)",
						"i": "cosine_decay(int64_t,int64_t,float)",
						"r": "float cosine_decay(int64_t step, int64_t decay_steps, float minimum)",
						"s": "",
						"u": "COSINE_DECAY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0071ab4c58df6b2c78ac5fc497c2474ec47edc9e"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "cosine_decay_restart",
						"t": "float (int64_t, int64_t, float, float)",
						"i": "cosine_decay_restart(int64_t,int64_t,float,float)",
						"r": "float cosine_decay_restart(int64_t step, int64_t decay_steps, float minimum, float restart_step_mult)",
						"s": "",
						"u": "COSINE_DECAY_RESTART",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b1c73340e35ef3fc481506a98f7d694927fd1e1"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "learning_schedule",
						"t": "float (int64_t, int64_t, int64_t, float, float, float, float, bool)",
						"i": "learning_schedule(int64_t,int64_t,int64_t,float,float,float,float,bool)",
						"r": "float learning_schedule(int64_t step, int64_t warmup_steps, int64_t decay_steps, float learning_rate, float overall_minimum, float cos_decay_minimum, float cos_decay_restart_step_mult, bool enable_restart)",
						"s": "",
						"u": "LEARNING_SCHEDULE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "15152774d6c6563f27a20f5aa28720a82d8d601b"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "copy_tensor_by_name",
						"t": "void (struct ggml_tensor *, struct ggml_context *, const char *)",
						"i": "copy_tensor_by_name(ggml_tensor*,ggml_context*,const char*)",
						"r": "void copy_tensor_by_name(ggml_tensor *dst, ggml_context *ctx, const char *name)",
						"s": "",
						"u": "COPY_TENSOR_BY_NAME",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5d42fce54304a46feb42db55ff124f3fa9871413"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "load_opt_context_gguf",
						"t": "void (struct gguf_context *, struct ggml_context *, struct ggml_opt_context *)",
						"i": "load_opt_context_gguf(gguf_context*,ggml_context*,ggml_opt_context*)",
						"r": "void load_opt_context_gguf(gguf_context *fctx, ggml_context *f_ggml_ctx, ggml_opt_context *opt)",
						"s": "",
						"u": "LOAD_OPT_CONTEXT_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f9fe39f9922b9466836c3b8917e36bdd80528a16"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "save_opt_context_gguf",
						"t": "void (struct gguf_context *, struct ggml_opt_context *)",
						"i": "save_opt_context_gguf(gguf_context*,ggml_opt_context*)",
						"r": "void save_opt_context_gguf(gguf_context *fctx, ggml_opt_context *opt)",
						"s": "",
						"u": "SAVE_OPT_CONTEXT_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2936cadf8d6efc7f575b5174aab965119cf833bb"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "load_train_state_gguf",
						"t": "bool (struct gguf_context *, struct ggml_context *, struct train_state *)",
						"i": "load_train_state_gguf(gguf_context*,ggml_context*,train_state*)",
						"r": "bool load_train_state_gguf(gguf_context *fctx, ggml_context *f_ggml_ctx, train_state *train)",
						"s": "",
						"u": "LOAD_TRAIN_STATE_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a3b7f4945da9f53473b1876e4cc0d06963b94e94"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "save_train_state_gguf",
						"t": "void (struct gguf_context *, struct train_state *)",
						"i": "save_train_state_gguf(gguf_context*,train_state*)",
						"r": "void save_train_state_gguf(gguf_context *fctx, train_state *train)",
						"s": "",
						"u": "SAVE_TRAIN_STATE_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "395f50a3fbd07713224bc79595a020b2135b3b93"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "get_train_filename",
						"t": "std::string (const char *, const char *, const char *, int64_t)",
						"i": "get_train_filename(const char*,const char*,const char*,int64_t)",
						"r": "std::string get_train_filename(const char *filename, const char *pattern_it, const char *latest, int64_t iteration)",
						"s": "",
						"u": "GET_TRAIN_FILENAME",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bfd9a0648cba29cbee530ab2af494ea82e0516bc"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "train_opt_callback",
						"t": "void (void *, int, float *, bool *)",
						"i": "train_opt_callback(void*,int,float*,bool*)",
						"r": "void train_opt_callback(void *vdata, int accum_step, float *sched, bool *cancel)",
						"s": "",
						"u": "TRAIN_OPT_CALLBACK",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c68edf5d4015109c07b8e45803621e408c1b3538"
							}
						]
					}
				]
			}
		},
		{
			"key": "train.cpp",
			"value": {
				"items": [
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_normal_distribution",
						"t": "random_normal_distribution",
						"i": "random_normal_distribution",
						"r": "random_normal_distribution",
						"s": "",
						"u": "RANDOM_NORMAL_DISTRIBUTION",
						"q": "random_normal_distribution",
						"w": "RANDOM_NORMAL_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ed9c55ecaf2c15ae92a10f96a11ab385448d1a01"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "gen",
						"t": "std::mt19937",
						"i": "random_normal_distribution::gen",
						"r": "std::mt19937 gen",
						"s": "",
						"u": "GEN",
						"q": "random_normal_distribution",
						"w": "RANDOM_NORMAL_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1558fa067421b5fbef8a454b3d6a1fd8bf2f28a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rd",
						"t": "std::normal_distribution<float>",
						"i": "random_normal_distribution::rd",
						"r": "std::normal_distribution<float> rd",
						"s": "",
						"u": "RD",
						"q": "random_normal_distribution",
						"w": "RANDOM_NORMAL_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b757d5355876999f3b8aba60e44b2cfe89cd88bb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min",
						"t": "float",
						"i": "random_normal_distribution::min",
						"r": "float min",
						"s": "",
						"u": "MIN",
						"q": "random_normal_distribution",
						"w": "RANDOM_NORMAL_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a488071fd81453d368a09ff7e15eaeee07f7671"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "max",
						"t": "float",
						"i": "random_normal_distribution::max",
						"r": "float max",
						"s": "",
						"u": "MAX",
						"q": "random_normal_distribution",
						"w": "RANDOM_NORMAL_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87fb616739d28a1cea42c2ac09d8d6580f323b9b"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "random_uniform_distribution",
						"t": "random_uniform_distribution",
						"i": "random_uniform_distribution",
						"r": "random_uniform_distribution",
						"s": "",
						"u": "RANDOM_UNIFORM_DISTRIBUTION",
						"q": "random_uniform_distribution",
						"w": "RANDOM_UNIFORM_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3c4c01536d6e008eaa03f0733074850a18e86ed9"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "gen",
						"t": "std::mt19937",
						"i": "random_uniform_distribution::gen",
						"r": "std::mt19937 gen",
						"s": "",
						"u": "GEN",
						"q": "random_uniform_distribution",
						"w": "RANDOM_UNIFORM_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d1558fa067421b5fbef8a454b3d6a1fd8bf2f28a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rd",
						"t": "std::uniform_real_distribution<float>",
						"i": "random_uniform_distribution::rd",
						"r": "std::uniform_real_distribution<float> rd",
						"s": "",
						"u": "RD",
						"q": "random_uniform_distribution",
						"w": "RANDOM_UNIFORM_DISTRIBUTION",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0a6eb49e81f7fb2e085861a648a445a8c1dd121f"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "init_train_state",
						"t": "struct train_state *()",
						"i": "init_train_state()",
						"r": "train_state *init_train_state()",
						"s": "",
						"u": "INIT_TRAIN_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ce8766b004a56eef70c2530a8002f73cea466cfc"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "free_train_state",
						"t": "void (struct train_state *)",
						"i": "free_train_state(train_state*)",
						"r": "void free_train_state(train_state *state)",
						"s": "",
						"u": "FREE_TRAIN_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "96841b99c1fa8bc9e54b0006df21005a82724e51"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "init_random_normal_distribution",
						"t": "struct random_normal_distribution *(int, float, float, float, float)",
						"i": "init_random_normal_distribution(int,float,float,float,float)",
						"r": "random_normal_distribution *init_random_normal_distribution(int seed, float mean, float std, float min, float max)",
						"s": "",
						"u": "INIT_RANDOM_NORMAL_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "87d945026924a239f99d11faa1c53309b0ce216b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "init_random_uniform_distribution",
						"t": "struct random_uniform_distribution *(int, float, float)",
						"i": "init_random_uniform_distribution(int,float,float)",
						"r": "random_uniform_distribution *init_random_uniform_distribution(int seed, float min, float max)",
						"s": "",
						"u": "INIT_RANDOM_UNIFORM_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d84ffc2f4e4f6d2bba81b882c5fee0cdafda35b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "free_random_normal_distribution",
						"t": "void (struct random_normal_distribution *)",
						"i": "free_random_normal_distribution(random_normal_distribution*)",
						"r": "void free_random_normal_distribution(random_normal_distribution *rnd)",
						"s": "",
						"u": "FREE_RANDOM_NORMAL_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8db9256e621822a206541b2ce86e08b5c5656c4f"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "free_random_uniform_distribution",
						"t": "void (struct random_uniform_distribution *)",
						"i": "free_random_uniform_distribution(random_uniform_distribution*)",
						"r": "void free_random_uniform_distribution(random_uniform_distribution *rnd)",
						"s": "",
						"u": "FREE_RANDOM_UNIFORM_DISTRIBUTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1b7976e9eed60ac4646f1b77734ebb06d60f2083"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "randomize_tensor_normal",
						"t": "struct ggml_tensor *(struct ggml_tensor *, struct random_normal_distribution *)",
						"i": "randomize_tensor_normal(ggml_tensor*,random_normal_distribution*)",
						"r": "ggml_tensor *randomize_tensor_normal(ggml_tensor *tensor, random_normal_distribution *rnd)",
						"s": "",
						"u": "RANDOMIZE_TENSOR_NORMAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0ffbfe7874f3e9be2c92314deb59e8151740b82a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "randomize_tensor_uniform",
						"t": "struct ggml_tensor *(struct ggml_tensor *, struct random_uniform_distribution *)",
						"i": "randomize_tensor_uniform(ggml_tensor*,random_uniform_distribution*)",
						"r": "ggml_tensor *randomize_tensor_uniform(ggml_tensor *tensor, random_uniform_distribution *rnd)",
						"s": "",
						"u": "RANDOMIZE_TENSOR_UNIFORM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6b0c904159a66984797c8a09b84630e69f5413ab"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "frand",
						"t": "float ()",
						"i": "frand()",
						"r": "float frand()",
						"s": "",
						"u": "FRAND",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2dc63aeca9eb651a53015a7b698f563a28beec81"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "frand_normal",
						"t": "float (struct random_normal_distribution *)",
						"i": "frand_normal(random_normal_distribution*)",
						"r": "float frand_normal(random_normal_distribution *rnd)",
						"s": "",
						"u": "FRAND_NORMAL",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9fca740e6f8298425280c335c45698af0a81b99"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "frand_uniform",
						"t": "float (struct random_uniform_distribution *)",
						"i": "frand_uniform(random_uniform_distribution*)",
						"r": "float frand_uniform(random_uniform_distribution *rnd)",
						"s": "",
						"u": "FRAND_UNIFORM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "78be27360dd59e327885f9c6001e46bff65e5e16"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "clamp",
						"t": "int (const int, const int, const int)",
						"i": "clamp(const int,const int,const int)",
						"r": "int clamp(const int v, const int min, const int max)",
						"s": "",
						"u": "CLAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ee4ba0f9534df77a651645838920cfcf95168e4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fclamp",
						"t": "float (const float, const float, const float)",
						"i": "fclamp(const float,const float,const float)",
						"r": "float fclamp(const float v, const float min, const float max)",
						"s": "",
						"u": "FCLAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a995f474468bed977f1da2774c680828d4a2b6ad"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "assert_shape_1d",
						"t": "void (struct ggml_tensor *, int64_t)",
						"i": "assert_shape_1d(ggml_tensor*,int64_t)",
						"r": "void assert_shape_1d(ggml_tensor *tensor, int64_t ne0)",
						"s": "",
						"u": "ASSERT_SHAPE_1D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b4669f31ed9beb23724c58b91a26b36744f53556"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "assert_shape_2d",
						"t": "void (struct ggml_tensor *, int64_t, int64_t)",
						"i": "assert_shape_2d(ggml_tensor*,int64_t,int64_t)",
						"r": "void assert_shape_2d(ggml_tensor *tensor, int64_t ne0, int64_t ne1)",
						"s": "",
						"u": "ASSERT_SHAPE_2D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c38730825cf39f13ea7ef4ff1c2519bfda1c8d21"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "assert_shape_3d",
						"t": "void (struct ggml_tensor *, int64_t, int64_t, int64_t)",
						"i": "assert_shape_3d(ggml_tensor*,int64_t,int64_t,int64_t)",
						"r": "void assert_shape_3d(ggml_tensor *tensor, int64_t ne0, int64_t ne1, int64_t ne2)",
						"s": "",
						"u": "ASSERT_SHAPE_3D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "222a00d4a8cee3dff363f61284005e84271d247d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "assert_shape_4d",
						"t": "void (struct ggml_tensor *, int64_t, int64_t, int64_t, int64_t)",
						"i": "assert_shape_4d(ggml_tensor*,int64_t,int64_t,int64_t,int64_t)",
						"r": "void assert_shape_4d(ggml_tensor *tensor, int64_t ne0, int64_t ne1, int64_t ne2, int64_t ne3)",
						"s": "",
						"u": "ASSERT_SHAPE_4D",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "894eff45b6dac38d4a9251a882b9c83e5673e477"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "get_example_targets_batch",
						"t": "int64_t (struct llama_context *, struct ggml_tensor *, struct ggml_tensor *, int64_t, const size_t *, const size_t *, const size_t *, size_t, const int *, size_t, bool, bool, bool, bool)",
						"i": "get_example_targets_batch(llama_context*,ggml_tensor*,ggml_tensor*,int64_t,const size_t*,const size_t*,const size_t*,size_t,const int*,size_t,bool,bool,bool,bool)",
						"r": "int64_t get_example_targets_batch(llama_context *lctx, ggml_tensor *tokens_input, ggml_tensor *target_probs, int64_t example_id, const size_t *samples_offs, const size_t *samples_begin, const size_t *samples_size, size_t samples_count, const int *train_data, size_t n_train_data, bool separate_with_eos, bool separate_with_bos, bool fill_with_next_samples, bool sample_random_offsets)",
						"s": "",
						"u": "GET_EXAMPLE_TARGETS_BATCH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c63bc090e4500c1f54dfcc39ff401b794241925c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mt19937_set_state",
						"t": "void (std::mt19937 &, const std::string &)",
						"i": "mt19937_set_state(std::mt19937&,const std::string&)",
						"r": "void mt19937_set_state(std::mt19937& rng, const std::string& rng_state)",
						"s": "",
						"u": "MT19937_SET_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bf5a588c539a961bfafbe092aa52f3bb51f6a8bd"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mt19937_get_state",
						"t": "std::string (const std::mt19937 &)",
						"i": "mt19937_get_state(const std::mt19937&)",
						"r": "std::string mt19937_get_state(const std::mt19937& rng)",
						"s": "",
						"u": "MT19937_GET_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27da09fe7162b89900f8d149ca509bba452151e8"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mt19937_seed_to_state",
						"t": "std::string (unsigned int)",
						"i": "mt19937_seed_to_state(unsigned int)",
						"r": "std::string mt19937_seed_to_state(unsigned int seed)",
						"s": "",
						"u": "MT19937_SEED_TO_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2c418bee44aa7a5d5fbf249dcadba5d21b993806"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "shuffle_samples",
						"t": "std::string (const std::string &, size_t *, size_t *, size_t *, const size_t *, const size_t *, size_t)",
						"i": "shuffle_samples(const std::string&,size_t*,size_t*,size_t*,const size_t*,const size_t*,size_t)",
						"r": "std::string shuffle_samples(const std::string& rng_state, size_t *shuffled_offs, size_t *shuffled_begins, size_t *shuffled_sizes, const size_t *begins, const size_t *sizes, size_t count)",
						"s": "",
						"u": "SHUFFLE_SAMPLES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9ee002543a05cfecc1010acb9f66bcfab0032ef7"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "hash_combine",
						"t": "size_t (size_t, size_t)",
						"i": "hash_combine(size_t,size_t)",
						"r": "size_t hash_combine(size_t h1, size_t h2)",
						"s": "",
						"u": "HASH_COMBINE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "91036038d1caecdd2297607fe6a37e9a6b906d7a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "compute_samples_hash",
						"t": "size_t (const char *, const size_t *, const size_t *, size_t)",
						"i": "compute_samples_hash(const char*,const size_t*,const size_t*,size_t)",
						"r": "size_t compute_samples_hash(const char *fn, const size_t *samples_begin, const size_t *samples_size, size_t sample_count)",
						"s": "",
						"u": "COMPUTE_SAMPLES_HASH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c9ad978524279c248568e31f4543d61769ff509a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "replace_str",
						"t": "std::string (const char *, const char *, const char *)",
						"i": "replace_str(const char*,const char*,const char*)",
						"r": "std::string replace_str(const char *s, const char *needle, const char *replacement)",
						"s": "",
						"u": "REPLACE_STR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2b63b972995ab9416edac20f74d10a2bfb2a69c4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "print_duration",
						"t": "void (double)",
						"i": "print_duration(double)",
						"r": "void print_duration(double fmillis)",
						"s": "",
						"u": "PRINT_DURATION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8a4576e9173f69f46723de423683139ac9c89f42"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cosine_decay",
						"t": "float (int64_t, int64_t, float)",
						"i": "cosine_decay(int64_t,int64_t,float)",
						"r": "float cosine_decay(int64_t step, int64_t decay_steps, float minimum)",
						"s": "",
						"u": "COSINE_DECAY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc4a1ffa605823477b931d7c7fc0a6a30fef24c4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cosine_decay_restart",
						"t": "float (int64_t, int64_t, float, float)",
						"i": "cosine_decay_restart(int64_t,int64_t,float,float)",
						"r": "float cosine_decay_restart(int64_t step, int64_t decay_steps, float minimum, float restart_step_mult)",
						"s": "",
						"u": "COSINE_DECAY_RESTART",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d2fa3a6054584548e38c012edb9b6e8d4c85c896"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "learning_schedule",
						"t": "float (int64_t, int64_t, int64_t, float, float, float, float, bool)",
						"i": "learning_schedule(int64_t,int64_t,int64_t,float,float,float,float,bool)",
						"r": "float learning_schedule(int64_t step, int64_t warmup_steps, int64_t cos_decay_steps, float learning_rate, float overall_minimum, float cos_decay_minimum, float cos_decay_restart_step_mult, bool enable_restart)",
						"s": "",
						"u": "LEARNING_SCHEDULE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3f0db21cb4c66f0b1afe9915787d17b2b17e0ac"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "are_same_layout",
						"t": "bool (struct ggml_tensor *, struct ggml_tensor *)",
						"i": "are_same_layout(ggml_tensor*,ggml_tensor*)",
						"r": "static bool are_same_layout(ggml_tensor *a, ggml_tensor *b)",
						"s": "",
						"u": "ARE_SAME_LAYOUT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "01fd2e72367015ea89a7e9095f81dcd8b82d80d0"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "copy_tensor_by_name",
						"t": "void (struct ggml_tensor *, struct ggml_context *, const char *)",
						"i": "copy_tensor_by_name(ggml_tensor*,ggml_context*,const char*)",
						"r": "void copy_tensor_by_name(ggml_tensor *dst, ggml_context *ctx, const char *name)",
						"s": "",
						"u": "COPY_TENSOR_BY_NAME",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c611af1e4b425231aa295e712ffc9dc709719917"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_TYPE",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_TYPE",
						"r": "static const char *LLM_KV_OPTIMIZER_TYPE",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_TYPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d25d1b876ebfd28eb086db215e0ed910a00f3f88"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_TYPE_ADAM",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_TYPE_ADAM",
						"r": "static const char *LLM_KV_OPTIMIZER_TYPE_ADAM",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_TYPE_ADAM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1af45d4e9aca2b0c24ca385f160d78ad4883872"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_TYPE_LBFGS",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_TYPE_LBFGS",
						"r": "static const char *LLM_KV_OPTIMIZER_TYPE_LBFGS",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_TYPE_LBFGS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1548621c832f44a5016caa4e4e0e883926b5e39"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_FILE_VERSION",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_FILE_VERSION",
						"r": "static const char *LLM_KV_OPTIMIZER_FILE_VERSION",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_FILE_VERSION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5ccf6d30341681fe128b0fb8f2f73ad1cdb2870f"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_CONVERGENCE_PAST_COUNT",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_CONVERGENCE_PAST_COUNT",
						"r": "static const char *LLM_KV_OPTIMIZER_CONVERGENCE_PAST_COUNT",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_CONVERGENCE_PAST_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e80f92e6a57e2e70f330ac45f598e2a0c3edd9d7"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_PARAMETER_COUNT",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_PARAMETER_COUNT",
						"r": "static const char *LLM_KV_OPTIMIZER_PARAMETER_COUNT",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_PARAMETER_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a6287b768ff41a37b593b541bc15c52b1f35d71f"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_ITERATION_COUNT",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_ITERATION_COUNT",
						"r": "static const char *LLM_KV_OPTIMIZER_ITERATION_COUNT",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_ITERATION_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a837822db838b6e6406ee97822c6c4a6c24a8a93"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_JUST_INITIALIZED",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_JUST_INITIALIZED",
						"r": "static const char *LLM_KV_OPTIMIZER_JUST_INITIALIZED",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_JUST_INITIALIZED",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3e2e8763b447a0d708f9211c630de970b7e853aa"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_ADAM_BEST_LOSS",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_ADAM_BEST_LOSS",
						"r": "static const char *LLM_KV_OPTIMIZER_ADAM_BEST_LOSS",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_ADAM_BEST_LOSS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7bb8eae9cdd697ffb5616f367e98599068ca264b"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_ADAM_PREVIOUS_LOSS",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_ADAM_PREVIOUS_LOSS",
						"r": "static const char *LLM_KV_OPTIMIZER_ADAM_PREVIOUS_LOSS",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_ADAM_PREVIOUS_LOSS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "467df0fdbcc03cb25aaaa02c7e5f515d8860e7f5"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_ADAM_NO_IMPROVEMENT_COUNT",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_ADAM_NO_IMPROVEMENT_COUNT",
						"r": "static const char *LLM_KV_OPTIMIZER_ADAM_NO_IMPROVEMENT_COUNT",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_ADAM_NO_IMPROVEMENT_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12ddf1aa784ddbf9d33c47a0790b0f2b009b2988"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_LBFGS_APPROX_HESSIAN_COUNT",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_LBFGS_APPROX_HESSIAN_COUNT",
						"r": "static const char *LLM_KV_OPTIMIZER_LBFGS_APPROX_HESSIAN_COUNT",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_LBFGS_APPROX_HESSIAN_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "10d631efc0cc75fb77887d2adca8b47d8f87c9af"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_LBFGS_BEST_LOSS",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_LBFGS_BEST_LOSS",
						"r": "static const char *LLM_KV_OPTIMIZER_LBFGS_BEST_LOSS",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_LBFGS_BEST_LOSS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dfa93a781d17d3d89433b9ddf9e0d8b96f619183"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_STEP",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_STEP",
						"r": "static const char *LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_STEP",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_STEP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "60e5d8b46d56c7ec024c01bde01f03beadae82a6"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_J",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_J",
						"r": "static const char *LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_J",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_J",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5cd4631b15a5cebe89c606568473d2de3457254c"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_K",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_K",
						"r": "static const char *LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_K",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_K",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a4d76da95d1c0c1def606e4e8229d85dead381d9"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_END",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_END",
						"r": "static const char *LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_END",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_LBFGS_LINE_SEARCH_END",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8c12dca1d277e3ecfcaf1e8f3ad6c15292e63efe"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_OPTIMIZER_LBFGS_NO_IMPROVEMENT_COUNT",
						"t": "const char *",
						"i": "LLM_KV_OPTIMIZER_LBFGS_NO_IMPROVEMENT_COUNT",
						"r": "static const char *LLM_KV_OPTIMIZER_LBFGS_NO_IMPROVEMENT_COUNT",
						"s": "",
						"u": "LLM_KV_OPTIMIZER_LBFGS_NO_IMPROVEMENT_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fb356f8f80ce29fb12e9e297bb3f4e6f0582eb6b"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_ADAM_FIRST_MOMENTS",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_ADAM_FIRST_MOMENTS",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_ADAM_FIRST_MOMENTS",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_ADAM_FIRST_MOMENTS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e973219df71d52d67f1bad51859fdcc6a0ce5bdb"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_ADAM_SECOND_MOMENTS",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_ADAM_SECOND_MOMENTS",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_ADAM_SECOND_MOMENTS",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_ADAM_SECOND_MOMENTS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "88b0bde0a2cec9bbe356285d15ea3936b9d11237"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_ADAM_PAST_LOSS_VALUES",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_ADAM_PAST_LOSS_VALUES",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_ADAM_PAST_LOSS_VALUES",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_ADAM_PAST_LOSS_VALUES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "497cfe3b6aac5ea7344b9cf64f13e0309b3cc95b"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_PARAMETERS",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_PARAMETERS",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_PARAMETERS",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_PARAMETERS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d8bd49c8e5b4ee9f1ba3f374c3dc6feb86a27c16"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_PARAMETERS",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_PARAMETERS",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_PARAMETERS",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_PARAMETERS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bacf64d0eb89436f413c859b217b1446c9a31cac"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_GRADIENTS",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_GRADIENTS",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_GRADIENTS",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_CURRENT_GRADIENTS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d0897406b98e1058b86adb809f03d568d55c615b"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_GRADIENTS",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_GRADIENTS",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_GRADIENTS",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_PREVIOUS_GRADIENTS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6ea1024e61f4c89154bcf09458c256fbe9d62806"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_SEARCH_DIRECTION",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_SEARCH_DIRECTION",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_SEARCH_DIRECTION",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_SEARCH_DIRECTION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b9496a019fa70663bb671b5d02fa8d31b11e1b10"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_PAST_LOSS_VALUES",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_PAST_LOSS_VALUES",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_PAST_LOSS_VALUES",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_PAST_LOSS_VALUES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d3c2b26b14b7b5befae8a65235a89fca9a74b6e"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_ALPHA",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_ALPHA",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_ALPHA",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_ALPHA",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f500277413c5bafa96a645676c44075851b3ed44"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_YS",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_YS",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_YS",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_YS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c380ff5611fd420eb51fdcddee94d6c6dd10c5f8"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_S",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_S",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_S",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_S",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "471f60d4d90c00f0b9c3cc9bf75f58869a302609"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_Y",
						"t": "const char *",
						"i": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_Y",
						"r": "static const char *LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_Y",
						"s": "",
						"u": "LLM_TENSOR_OPTIMIZER_LBFGS_MEMORY_Y",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b270fe9e810e76b5b15ca8013f50b4ad167ab96b"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_FILE_VERSION",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_FILE_VERSION",
						"r": "static const char *LLM_KV_TRAINING_FILE_VERSION",
						"s": "",
						"u": "LLM_KV_TRAINING_FILE_VERSION",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "806ae603d50c33f104c2c99dbb60b905609590d0"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_ITERATION_COUNT",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_ITERATION_COUNT",
						"r": "static const char *LLM_KV_TRAINING_ITERATION_COUNT",
						"s": "",
						"u": "LLM_KV_TRAINING_ITERATION_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b19bff27c44c51c0fa0f2d42b5bfeb7562f938bc"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_SAMPLE_COUNT",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_SAMPLE_COUNT",
						"r": "static const char *LLM_KV_TRAINING_SAMPLE_COUNT",
						"s": "",
						"u": "LLM_KV_TRAINING_SAMPLE_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "08c488efd2d0648580f1826a25162eec69d3fa7f"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_TOKEN_COUNT",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_TOKEN_COUNT",
						"r": "static const char *LLM_KV_TRAINING_TOKEN_COUNT",
						"s": "",
						"u": "LLM_KV_TRAINING_TOKEN_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc5828bd19b7f335eff76fa05fa53f6688eaacc6"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_EPOCH_COUNT",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_EPOCH_COUNT",
						"r": "static const char *LLM_KV_TRAINING_EPOCH_COUNT",
						"s": "",
						"u": "LLM_KV_TRAINING_EPOCH_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f244728b8be9c661d9c3c230540aa487ec93418c"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_SHUFFLE_SAMPLES_HASH",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_SHUFFLE_SAMPLES_HASH",
						"r": "static const char *LLM_KV_TRAINING_SHUFFLE_SAMPLES_HASH",
						"s": "",
						"u": "LLM_KV_TRAINING_SHUFFLE_SAMPLES_HASH",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "957ab18b583362597b4465f961d9ff85c91711a3"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_SHUFFLE_RNG_STATE",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_SHUFFLE_RNG_STATE",
						"r": "static const char *LLM_KV_TRAINING_SHUFFLE_RNG_STATE",
						"s": "",
						"u": "LLM_KV_TRAINING_SHUFFLE_RNG_STATE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "38367444e2f116c82c07b9e1d25d6e0192c6ce91"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_SHUFFLE_SAMPLE_COUNT",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_SHUFFLE_SAMPLE_COUNT",
						"r": "static const char *LLM_KV_TRAINING_SHUFFLE_SAMPLE_COUNT",
						"s": "",
						"u": "LLM_KV_TRAINING_SHUFFLE_SAMPLE_COUNT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3bc342ce0e8d626ffa837ddf5db78610b8487505"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": true,
						"n": "LLM_KV_TRAINING_SHUFFLE_NEXT_SAMPLE",
						"t": "const char *",
						"i": "LLM_KV_TRAINING_SHUFFLE_NEXT_SAMPLE",
						"r": "static const char *LLM_KV_TRAINING_SHUFFLE_NEXT_SAMPLE",
						"s": "",
						"u": "LLM_KV_TRAINING_SHUFFLE_NEXT_SAMPLE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9e1614e7c8d7689f3e30fca3af8832fc70f5b15c"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "GGUF_GET_KEY",
						"t": "",
						"i": "GGUF_GET_KEY",
						"r": "GGUF_GET_KEY",
						"s": "",
						"u": "GGUF_GET_KEY",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5955e0158d9962efece596f98ec577aa6af2bd7c"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "load_opt_context_gguf",
						"t": "void (struct gguf_context *, struct ggml_context *, struct ggml_opt_context *)",
						"i": "load_opt_context_gguf(gguf_context*,ggml_context*,ggml_opt_context*)",
						"r": "void load_opt_context_gguf(gguf_context *fctx, ggml_context *f_ggml_ctx, ggml_opt_context *opt)",
						"s": "",
						"u": "LOAD_OPT_CONTEXT_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ccc65618d3677bd1348f93c748440d1361f57b18"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "save_opt_context_gguf",
						"t": "void (struct gguf_context *, struct ggml_opt_context *)",
						"i": "save_opt_context_gguf(gguf_context*,ggml_opt_context*)",
						"r": "void save_opt_context_gguf(gguf_context *fctx, ggml_opt_context *opt)",
						"s": "",
						"u": "SAVE_OPT_CONTEXT_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "888c76a50a1c17d9c8764f438fab7889cb83fc0b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "load_train_state_gguf",
						"t": "bool (struct gguf_context *, struct ggml_context *, struct train_state *)",
						"i": "load_train_state_gguf(gguf_context*,ggml_context*,train_state*)",
						"r": "bool load_train_state_gguf(gguf_context *fctx, ggml_context *f_ggml_ctx, train_state *train)",
						"s": "",
						"u": "LOAD_TRAIN_STATE_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b5b90021da5c4c9859718f095b54196c39bf6a40"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "save_train_state_gguf",
						"t": "void (struct gguf_context *, struct train_state *)",
						"i": "save_train_state_gguf(gguf_context*,train_state*)",
						"r": "void save_train_state_gguf(gguf_context *fctx, train_state *train)",
						"s": "",
						"u": "SAVE_TRAIN_STATE_GGUF",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "efd0719751f804d3012da557e7b762b2841b5091"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_file",
						"t": "llama_file",
						"i": "llama_file",
						"r": "llama_file",
						"s": "",
						"u": "LLAMA_FILE",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "9d9f5c03d9bdf1f40dd14bac2c70525e841f1c51"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "fp",
						"t": "FILE *",
						"i": "llama_file::fp",
						"r": "FILE *fp",
						"s": "",
						"u": "FP",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5e58c606398fd169acd2472f39c56c0dcbb35598"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "size",
						"t": "size_t",
						"i": "llama_file::size",
						"r": "size_t size",
						"s": "",
						"u": "SIZE",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7fc2932079562ac8bf085b371684b2661d601aa3"
							}
						]
					},
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_file",
						"t": "void (const char *, const char *)",
						"i": "llama_file::llama_file(const char*,const char*)",
						"r": "llama_file(const char *fname, const char *mode)",
						"s": "",
						"u": "LLAMA_FILE",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "126a6358d2dbf57295a3980a745a1dd1ee20f253"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "tell",
						"t": "size_t () const",
						"i": "llama_file::tell()const",
						"r": "size_t tell() const",
						"s": "",
						"u": "TELL",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "1c6a653351a3cb3ce3a0eb7a49821c98e437ea97"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "seek",
						"t": "void (size_t, int)",
						"i": "llama_file::seek(size_t,int)",
						"r": "void seek(size_t offset, int whence)",
						"s": "",
						"u": "SEEK",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ad5a9ebd9733ebf430bd0ec2830d3748a8407f69"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "read_raw",
						"t": "void (void *, size_t)",
						"i": "llama_file::read_raw(void*,size_t)",
						"r": "void read_raw(void *ptr, size_t size)",
						"s": "",
						"u": "READ_RAW",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "74c3fb158dff8f7080150787cb6bd22348fcfe7a"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "read_u32",
						"t": "std::uint32_t ()",
						"i": "llama_file::read_u32()",
						"r": "std::uint32_t read_u32()",
						"s": "",
						"u": "READ_U32",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a462afd975a8cbec67761be606df32e7bf8a6489"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "read_string",
						"t": "std::string (std::uint32_t)",
						"i": "llama_file::read_string(std::uint32_t)",
						"r": "std::string read_string(std::uint32_t len)",
						"s": "",
						"u": "READ_STRING",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d96df6486ffe53475841bea497da5ccfb6d01537"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "write_raw",
						"t": "void (const void *, size_t)",
						"i": "llama_file::write_raw(const void*,size_t)",
						"r": "void write_raw(const void *ptr, size_t size)",
						"s": "",
						"u": "WRITE_RAW",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c187b6de764242fec7fa159f348b0321a163fb9b"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "write_u32",
						"t": "void (std::uint32_t)",
						"i": "llama_file::write_u32(std::uint32_t)",
						"r": "void write_u32(std::uint32_t val)",
						"s": "",
						"u": "WRITE_U32",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "12b80c15827bf95e1564c0bf702cfe66fc1aa828"
							}
						]
					},
					{
						"k": 25,
						"d": true,
						"iv": false,
						"is": false,
						"n": "~llama_file",
						"t": "void () noexcept",
						"i": "llama_file::~()",
						"r": "~llama_file()",
						"s": "",
						"u": "~LLAMA_FILE",
						"q": "llama_file",
						"w": "LLAMA_FILE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a4fd87d410c86ac04f9bc9ab771911f275026778"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "utf8_len",
						"t": "size_t (char)",
						"i": "utf8_len(char)",
						"r": "static size_t utf8_len(char src)",
						"s": "",
						"u": "UTF8_LEN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c286b902c044fa469405f25a4c93763768aa2ba"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "mark_utf8_units",
						"t": "size_t (const char *, int *, int *, size_t)",
						"i": "mark_utf8_units(const char*,int*,int*,size_t)",
						"r": "static size_t mark_utf8_units(const char *bytes, int *utf8_units, int *utf8_nunits, size_t count)",
						"s": "",
						"u": "MARK_UTF8_UNITS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "54bd4e53c01b75f429b72c28ecf121628731056d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "tokenize_file",
						"t": "size_t (struct llama_context *, const char *, const std::string &, bool, bool, unsigned int, int &, int &, int &)",
						"i": "tokenize_file(llama_context*,const char*,const std::string&,bool,bool,unsigned int,int&,int&,int&)",
						"r": "size_t tokenize_file(llama_context *lctx, const char *filename, const std::string& sample_start, bool include_sample_start, bool overlapping_samples, unsigned int context_length, int& out_tokens, int& out_samples_begin, int& out_samples_size)",
						"s": "",
						"u": "TOKENIZE_FILE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1ce1d37a50b456e7da052b3c6676aa2d9982786"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "get_train_filename",
						"t": "std::string (const char *, const char *, const char *, int64_t)",
						"i": "get_train_filename(const char*,const char*,const char*,int64_t)",
						"r": "std::string get_train_filename(const char *filename, const char *pattern_it, const char *latest, int64_t iteration)",
						"s": "",
						"u": "GET_TRAIN_FILENAME",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "059921c1d9b3488401e5a52cdefc4e3cb0b4d275"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "get_default_train_params_common",
						"t": "struct train_params_common ()",
						"i": "get_default_train_params_common()",
						"r": "train_params_common get_default_train_params_common()",
						"s": "",
						"u": "GET_DEFAULT_TRAIN_PARAMS_COMMON",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "176812f302b165d9a680ac5ed9f4882e37e1cce0"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "print_common_train_usage",
						"t": "void (int, char **, const struct train_params_common *)",
						"i": "print_common_train_usage(int,char**,const train_params_common*)",
						"r": "void print_common_train_usage(int, char **, const train_params_common *params)",
						"s": "",
						"u": "PRINT_COMMON_TRAIN_USAGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bedb5c4f5c8ecde057ab4bc62bc3fd1a21fe58a7"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "consume_common_train_arg",
						"t": "bool (int, char **, int *, struct train_params_common *, bool *)",
						"i": "consume_common_train_arg(int,char**,int*,train_params_common*,bool*)",
						"r": "bool consume_common_train_arg(int argc, char **argv, int *idx, train_params_common *params, bool *invalid_param)",
						"s": "",
						"u": "CONSUME_COMMON_TRAIN_ARG",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ade4d7c26287449b10629f781cb0cee9db09b030"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "finish_processing_train_args",
						"t": "void (struct train_params_common *)",
						"i": "finish_processing_train_args(train_params_common*)",
						"r": "void finish_processing_train_args(train_params_common *params)",
						"s": "",
						"u": "FINISH_PROCESSING_TRAIN_ARGS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b1d277ab33d3c9814410889ffe87e0f19f595c82"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "train_opt_callback",
						"t": "void (void *, int, float *, bool *)",
						"i": "train_opt_callback(void*,int,float*,bool*)",
						"r": "void train_opt_callback(void *vdata, int accum_step, float *sched, bool *cancel)",
						"s": "",
						"u": "TRAIN_OPT_CALLBACK",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "18add9702af62fca7127b93b46cc623cac32c9f9"
							}
						]
					}
				]
			}
		},
		{
			"key": "grammar-parser.h",
			"value": {
				"items": [
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parse_state",
						"t": "grammar_parser::parse_state",
						"i": "grammar_parser::parse_state",
						"r": "parse_state",
						"s": "grammar_parser",
						"u": "PARSE_STATE",
						"q": "grammar_parser::parse_state",
						"w": "GRAMMAR_PARSER::PARSE_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f6a16ad2dd1d90d11330eca6981847ca8d5c637c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "symbol_ids",
						"t": "std::map<std::string, uint32_t>",
						"i": "grammar_parser::parse_state::symbol_ids",
						"r": "std::map<std::string, uint32_t> symbol_ids",
						"s": "grammar_parser",
						"u": "SYMBOL_IDS",
						"q": "grammar_parser::parse_state",
						"w": "GRAMMAR_PARSER::PARSE_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "86772c23f3cd74e7284bdbee91be2898f92e4c5a"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "rules",
						"t": "int",
						"i": "grammar_parser::parse_state::rules",
						"r": "int rules",
						"s": "grammar_parser",
						"u": "RULES",
						"q": "grammar_parser::parse_state",
						"w": "GRAMMAR_PARSER::PARSE_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ca5de430bfa598bac60888955ac8ce2af950e400"
							}
						]
					},
					{
						"k": 21,
						"d": false,
						"iv": false,
						"is": false,
						"n": "c_rules",
						"t": "int ()",
						"i": "grammar_parser::parse_state::c_rules()",
						"r": "int c_rules()",
						"s": "grammar_parser",
						"u": "C_RULES",
						"q": "grammar_parser::parse_state",
						"w": "GRAMMAR_PARSER::PARSE_STATE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6180814fcd2165c7f1d22a72cde2e2b6cd24de77"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "parse",
						"t": "parse_state (const char *)",
						"i": "grammar_parser::parse(const char*)",
						"r": "parse_state parse(const char *src)",
						"s": "grammar_parser",
						"u": "PARSE",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "331861aa650abf798b2589c115f72688a6510672"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "print_grammar",
						"t": "void (FILE *, const parse_state &)",
						"i": "grammar_parser::print_grammar(FILE*,const parse_state&)",
						"r": "void print_grammar(FILE *file, const parse_state& state)",
						"s": "grammar_parser",
						"u": "PRINT_GRAMMAR",
						"q": "grammar_parser",
						"w": "GRAMMAR_PARSER",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3be8cdc9d0ef35d50ad17da57a4922db6e8d56dc"
							}
						]
					}
				]
			}
		},
		{
			"key": "common.cpp",
			"value": {
				"items": [
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "WIN32_LEAN_AND_MEAN",
						"t": "",
						"i": "WIN32_LEAN_AND_MEAN",
						"r": "WIN32_LEAN_AND_MEAN",
						"s": "",
						"u": "WIN32_LEAN_AND_MEAN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bea664f8a77804ab3dc1ff0ebd1762f9028b42da"
							}
						]
					},
					{
						"k": 501,
						"d": false,
						"iv": false,
						"is": false,
						"n": "NOMINMAX",
						"t": "",
						"i": "NOMINMAX",
						"r": "NOMINMAX",
						"s": "",
						"u": "NOMINMAX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "55eaf1246c782d6421d1b3ae538021e9cbac20fd"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "get_num_physical_cores",
						"t": "int32_t ()",
						"i": "get_num_physical_cores()",
						"r": "int32_t get_num_physical_cores()",
						"s": "",
						"u": "GET_NUM_PHYSICAL_CORES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5035e77576e09876d1b6e0e94ece88be1b740c65"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "process_escapes",
						"t": "void (std::string &)",
						"i": "process_escapes(std::string&)",
						"r": "void process_escapes(std::string& input)",
						"s": "",
						"u": "PROCESS_ESCAPES",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "82151f783610dd9b0b60ecabca7484e2de1109ba"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "gpt_params_parse",
						"t": "bool (int, char **, gpt_params &)",
						"i": "gpt_params_parse(int,char**,gpt_params&)",
						"r": "bool gpt_params_parse(int argc, char **argv, gpt_params& params)",
						"s": "",
						"u": "GPT_PARAMS_PARSE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "46acb6c8a7699079b6c18a0a7717ca76c5383c5b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "gpt_params_parse_ex",
						"t": "bool (int, char **, gpt_params &)",
						"i": "gpt_params_parse_ex(int,char**,gpt_params&)",
						"r": "bool gpt_params_parse_ex(int argc, char **argv, gpt_params& params)",
						"s": "",
						"u": "GPT_PARAMS_PARSE_EX",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "84eaac4e8c16381220ccaa4355436e5e46cee02b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "gpt_print_usage",
						"t": "void (int, char **, const gpt_params &)",
						"i": "gpt_print_usage(int,char**,const gpt_params&)",
						"r": "void gpt_print_usage(int, char **argv, const gpt_params& params)",
						"s": "",
						"u": "GPT_PRINT_USAGE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "332a86e238c4b557df55416369f3f16174956fd3"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "get_system_info",
						"t": "std::string (const gpt_params &)",
						"i": "get_system_info(const gpt_params&)",
						"r": "std::string get_system_info(const gpt_params& params)",
						"s": "",
						"u": "GET_SYSTEM_INFO",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3853076805c3ac0c239ea47b1d6b3165bb0a196d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "gpt_random_prompt",
						"t": "std::string (std::mt19937 &)",
						"i": "gpt_random_prompt(std::mt19937&)",
						"r": "std::string gpt_random_prompt(std::mt19937& rng)",
						"s": "",
						"u": "GPT_RANDOM_PROMPT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2455aa7b182628bad97c14eeeda86b1c320a9b27"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parse_samplers_input",
						"t": "std::string (std::string)",
						"i": "parse_samplers_input(std::string)",
						"r": "std::string parse_samplers_input(std::string input)",
						"s": "",
						"u": "PARSE_SAMPLERS_INPUT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ecb201e577e913753f96647e8daaac047380b117"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_model_params_from_gpt_params",
						"t": "struct llama_model_params (const gpt_params &)",
						"i": "llama_model_params_from_gpt_params(const gpt_params&)",
						"r": "llama_model_params llama_model_params_from_gpt_params(const gpt_params& params)",
						"s": "",
						"u": "LLAMA_MODEL_PARAMS_FROM_GPT_PARAMS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "277152796380dc971117f81c5169bd7190f6a40b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": true,
						"n": "kv_cache_type_from_str",
						"t": "int (const std::string &)",
						"i": "kv_cache_type_from_str(const std::string&)",
						"r": "static int kv_cache_type_from_str(const std::string& s)",
						"s": "",
						"u": "KV_CACHE_TYPE_FROM_STR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c1d965ab62da28887ab37f8936c9dfd6786d68eb"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_context_params_from_gpt_params",
						"t": "struct llama_context_params (const gpt_params &)",
						"i": "llama_context_params_from_gpt_params(const gpt_params&)",
						"r": "llama_context_params llama_context_params_from_gpt_params(const gpt_params& params)",
						"s": "",
						"u": "LLAMA_CONTEXT_PARAMS_FROM_GPT_PARAMS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8ae98225296a6b5fc470605cdca942d2a11100f4"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_batch_clear",
						"t": "void (struct llama_batch &)",
						"i": "llama_batch_clear(llama_batch&)",
						"r": "void llama_batch_clear(llama_batch& batch)",
						"s": "",
						"u": "LLAMA_BATCH_CLEAR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2d836375320f1cfd3f2391b8d3e369bd6b925f0b"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_batch_add",
						"t": "void (struct llama_batch &, int, int, const int &, bool)",
						"i": "llama_batch_add(llama_batch&,int,int,const int&,bool)",
						"r": "void llama_batch_add(llama_batch& batch, int id, int pos, const int& seq_ids, bool logits)",
						"s": "",
						"u": "LLAMA_BATCH_ADD",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d9157185a802146b2c2419e1f4ab36b5c5c6bbdb"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_init_from_gpt_params",
						"t": "std::tuple<struct llama_model *, struct llama_context *> (gpt_params &)",
						"i": "llama_init_from_gpt_params(gpt_params&)",
						"r": "std::tuple<struct llama_model *, struct llama_context *> llama_init_from_gpt_params(gpt_params& params)",
						"s": "",
						"u": "LLAMA_INIT_FROM_GPT_PARAMS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "af8306d808e8b9dd614ce34048c57e73c261c08d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_tokenize",
						"t": "int (const struct llama_context *, const std::string &, bool, bool)",
						"i": "llama_tokenize(const llama_context*,const std::string&,bool,bool)",
						"r": "int llama_tokenize(const llama_context *ctx, const std::string& text, bool add_bos, bool special)",
						"s": "",
						"u": "LLAMA_TOKENIZE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "de8b0593d5494c280a13d51a71b01fc938b9d5dc"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_tokenize",
						"t": "int (const struct llama_model *, const std::string &, bool, bool)",
						"i": "llama_tokenize(const llama_model*,const std::string&,bool,bool)",
						"r": "int llama_tokenize(const llama_model *model, const std::string& text, bool add_bos, bool special)",
						"s": "",
						"u": "LLAMA_TOKENIZE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "49e027f57bb83d62d312efe6d9f422e5fab604ce"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_token_to_piece",
						"t": "std::string (const struct llama_context *, int)",
						"i": "llama_token_to_piece(const llama_context*,int)",
						"r": "std::string llama_token_to_piece(const llama_context *ctx, int token)",
						"s": "",
						"u": "LLAMA_TOKEN_TO_PIECE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bc1bc562afbba3614814f301ba57bcc7f68e22ff"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_detokenize_spm",
						"t": "std::string (llama_context *, const int &)",
						"i": "llama_detokenize_spm(llama_context*,const int&)",
						"r": "std::string llama_detokenize_spm(llama_context *ctx, const int& tokens)",
						"s": "",
						"u": "LLAMA_DETOKENIZE_SPM",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "666280dd7df2e97c255465503022f76cdb299fb1"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_detokenize_bpe",
						"t": "std::string (llama_context *, const int &)",
						"i": "llama_detokenize_bpe(llama_context*,const int&)",
						"r": "std::string llama_detokenize_bpe(llama_context *ctx, const int& tokens)",
						"s": "",
						"u": "LLAMA_DETOKENIZE_BPE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "526477842a911e3af70d4d004c6200079830a9af"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_should_add_bos_token",
						"t": "bool (const llama_model *)",
						"i": "llama_should_add_bos_token(const llama_model*)",
						"r": "bool llama_should_add_bos_token(const llama_model *model)",
						"s": "",
						"u": "LLAMA_SHOULD_ADD_BOS_TOKEN",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0b71b66867990c4593ddb1cfdfa9a14ffc806a58"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "create_directory_with_parents",
						"t": "bool (const std::string &)",
						"i": "create_directory_with_parents(const std::string&)",
						"r": "bool create_directory_with_parents(const std::string& path)",
						"s": "",
						"u": "CREATE_DIRECTORY_WITH_PARENTS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "eccdcc60174f7b6120a23be786d75d7f7e1bd304"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dump_vector_float_yaml",
						"t": "void (FILE *, const char *, const int &)",
						"i": "dump_vector_float_yaml(FILE*,const char*,const int&)",
						"r": "void dump_vector_float_yaml(FILE *stream, const char *prop_name, const int& data)",
						"s": "",
						"u": "DUMP_VECTOR_FLOAT_YAML",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "61960e65a8b80cd041605b63ea86d13d41f252f6"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dump_vector_int_yaml",
						"t": "void (FILE *, const char *, const int &)",
						"i": "dump_vector_int_yaml(FILE*,const char*,const int&)",
						"r": "void dump_vector_int_yaml(FILE *stream, const char *prop_name, const int& data)",
						"s": "",
						"u": "DUMP_VECTOR_INT_YAML",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e55fd4073ad791b3129a73c4856b06d2c7e59c1d"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dump_string_yaml_multiline",
						"t": "void (FILE *, const char *, const char *)",
						"i": "dump_string_yaml_multiline(FILE*,const char*,const char*)",
						"r": "void dump_string_yaml_multiline(FILE *stream, const char *prop_name, const char *data)",
						"s": "",
						"u": "DUMP_STRING_YAML_MULTILINE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "67585234c797e41869fa84a61b94a52042f6b03a"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "get_sortable_timestamp",
						"t": "std::string ()",
						"i": "get_sortable_timestamp()",
						"r": "std::string get_sortable_timestamp()",
						"s": "",
						"u": "GET_SORTABLE_TIMESTAMP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "28f7953df9e73649a99f27424fffc01d424a9691"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dump_non_result_info_yaml",
						"t": "void (FILE *, const gpt_params &, const llama_context *, const std::string &, const int &, const char *)",
						"i": "dump_non_result_info_yaml(FILE*,const gpt_params&,const llama_context*,const std::string&,const int&,const char*)",
						"r": "void dump_non_result_info_yaml(FILE *stream, const gpt_params& params, const llama_context *lctx, const std::string& timestamp, const int& prompt_tokens, const char *model_desc)",
						"s": "",
						"u": "DUMP_NON_RESULT_INFO_YAML",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "972bd66e51c4692835f8feaebb46ff0011878d30"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dump_kv_cache_view",
						"t": "void (const int &, int)",
						"i": "dump_kv_cache_view(const int&,int)",
						"r": "void dump_kv_cache_view(const int& view, int row_size)",
						"s": "",
						"u": "DUMP_KV_CACHE_VIEW",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3256eb6a8d5f8f913bcb054ede9c7ead989442a6"
							}
						]
					},
					{
						"k": 8,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dump_kv_cache_view_seqs",
						"t": "void (const int &, int)",
						"i": "dump_kv_cache_view_seqs(const int&,int)",
						"r": "void dump_kv_cache_view_seqs(const int& view, int row_size)",
						"s": "",
						"u": "DUMP_KV_CACHE_VIEW_SEQS",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b22b1e52b4f21e9b131b3a8aea1812364e2a587b"
							}
						]
					}
				]
			}
		},
		{
			"key": "sampling.h",
			"value": {
				"items": [
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_params",
						"t": "llama_sampling_params",
						"i": "llama_sampling_params",
						"r": "llama_sampling_params",
						"s": "",
						"u": "LLAMA_SAMPLING_PARAMS",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "44456282c17cfff76ad5a32966f699570f551fa0"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_prev",
						"t": "int32_t",
						"i": "llama_sampling_params::n_prev",
						"r": "int32_t n_prev",
						"s": "",
						"u": "N_PREV",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "fcad6b8b56181bffc85949bb1c51d150e4b74f8f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "n_probs",
						"t": "int32_t",
						"i": "llama_sampling_params::n_probs",
						"r": "int32_t n_probs",
						"s": "",
						"u": "N_PROBS",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2692542b1dd9bdf5aa7d0147bd2271238505353"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "top_k",
						"t": "int32_t",
						"i": "llama_sampling_params::top_k",
						"r": "int32_t top_k",
						"s": "",
						"u": "TOP_K",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "86b646bb22358cc727f3246830d7f7bd23d715ad"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "top_p",
						"t": "float",
						"i": "llama_sampling_params::top_p",
						"r": "float top_p",
						"s": "",
						"u": "TOP_P",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "95685b47f1d973aae27efecc6f60107012bff418"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "min_p",
						"t": "float",
						"i": "llama_sampling_params::min_p",
						"r": "float min_p",
						"s": "",
						"u": "MIN_P",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f7d01bbf7d7679c6d9677e55cc13422d45972c43"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "tfs_z",
						"t": "float",
						"i": "llama_sampling_params::tfs_z",
						"r": "float tfs_z",
						"s": "",
						"u": "TFS_Z",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7573bd8e1178c5016262ee361af4360012919af3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "typical_p",
						"t": "float",
						"i": "llama_sampling_params::typical_p",
						"r": "float typical_p",
						"s": "",
						"u": "TYPICAL_P",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "5c5ce2c98d9c9484dae7648ac88bb908081bc96c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "temp",
						"t": "float",
						"i": "llama_sampling_params::temp",
						"r": "float temp",
						"s": "",
						"u": "TEMP",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d29ec4c2147e6444a362a4727e71c301c183b6f3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dynatemp_range",
						"t": "float",
						"i": "llama_sampling_params::dynatemp_range",
						"r": "float dynatemp_range",
						"s": "",
						"u": "DYNATEMP_RANGE",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "13455c7be24b0fedfb08042934ca0cf4842cd21c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "dynatemp_exponent",
						"t": "float",
						"i": "llama_sampling_params::dynatemp_exponent",
						"r": "float dynatemp_exponent",
						"s": "",
						"u": "DYNATEMP_EXPONENT",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4ccb9a74bede9e8da5d0b7127ba1167f6b15be6c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "penalty_last_n",
						"t": "int32_t",
						"i": "llama_sampling_params::penalty_last_n",
						"r": "int32_t penalty_last_n",
						"s": "",
						"u": "PENALTY_LAST_N",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4a63e4bf7f9374d9768c904e86d343b2f7530f39"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "penalty_repeat",
						"t": "float",
						"i": "llama_sampling_params::penalty_repeat",
						"r": "float penalty_repeat",
						"s": "",
						"u": "PENALTY_REPEAT",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "14d811499519ee58ad29a93c3e2415b044067775"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "penalty_freq",
						"t": "float",
						"i": "llama_sampling_params::penalty_freq",
						"r": "float penalty_freq",
						"s": "",
						"u": "PENALTY_FREQ",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "bef7dd5214e5ae4a38a31aa6749e85a9e5ba11ef"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "penalty_present",
						"t": "float",
						"i": "llama_sampling_params::penalty_present",
						"r": "float penalty_present",
						"s": "",
						"u": "PENALTY_PRESENT",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "04088ae1edaa71f53ea7c7d537199358d1f8606c"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mirostat",
						"t": "int32_t",
						"i": "llama_sampling_params::mirostat",
						"r": "int32_t mirostat",
						"s": "",
						"u": "MIROSTAT",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b0d7893e48b5bb21722d68662bd583bc277aebf8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mirostat_tau",
						"t": "float",
						"i": "llama_sampling_params::mirostat_tau",
						"r": "float mirostat_tau",
						"s": "",
						"u": "MIROSTAT_TAU",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "a889f72e5f8ac5cad82c28a6f95af27354307b48"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mirostat_eta",
						"t": "float",
						"i": "llama_sampling_params::mirostat_eta",
						"r": "float mirostat_eta",
						"s": "",
						"u": "MIROSTAT_ETA",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3d6337526a83d3626a907f44585933c3924a095e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "penalize_nl",
						"t": "bool",
						"i": "llama_sampling_params::penalize_nl",
						"r": "bool penalize_nl",
						"s": "",
						"u": "PENALIZE_NL",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c0bc06c784d1adb2c87d77a4dd1066074a9a3b22"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "samplers_sequence",
						"t": "std::string",
						"i": "llama_sampling_params::samplers_sequence",
						"r": "std::string samplers_sequence",
						"s": "",
						"u": "SAMPLERS_SEQUENCE",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "59c1741afd14a7fa88fab72f0e85d7cd8edf5ac8"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "grammar",
						"t": "std::string",
						"i": "llama_sampling_params::grammar",
						"r": "std::string grammar",
						"s": "",
						"u": "GRAMMAR",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "86792c73002baeea862f2dca8b1564700492b3f3"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cfg_negative_prompt",
						"t": "std::string",
						"i": "llama_sampling_params::cfg_negative_prompt",
						"r": "std::string cfg_negative_prompt",
						"s": "",
						"u": "CFG_NEGATIVE_PROMPT",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0835795ab7282e601a524ea54e9c6f9b3d41bd4f"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cfg_scale",
						"t": "float",
						"i": "llama_sampling_params::cfg_scale",
						"r": "float cfg_scale",
						"s": "",
						"u": "CFG_SCALE",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "dc464b7aa915dc297428a68bb78bb07924033ddf"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "logit_bias",
						"t": "int",
						"i": "llama_sampling_params::logit_bias",
						"r": "int logit_bias",
						"s": "",
						"u": "LOGIT_BIAS",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0c9cbb14c50f4a988ae875858a5648a088dfe6a2"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "penalty_prompt_tokens",
						"t": "int",
						"i": "llama_sampling_params::penalty_prompt_tokens",
						"r": "int penalty_prompt_tokens",
						"s": "",
						"u": "PENALTY_PROMPT_TOKENS",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2f70fca08ade8c38a525169e00a71a4589bbe017"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "use_penalty_prompt_tokens",
						"t": "bool",
						"i": "llama_sampling_params::use_penalty_prompt_tokens",
						"r": "bool use_penalty_prompt_tokens",
						"s": "",
						"u": "USE_PENALTY_PROMPT_TOKENS",
						"q": "llama_sampling_params",
						"w": "LLAMA_SAMPLING_PARAMS",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "30c2c769a4437d900bb3c34673b82b21515119f8"
							}
						]
					},
					{
						"k": 20,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_params",
						"t": "llama_sampling_params",
						"i": "llama_sampling_params",
						"r": "typedef llama_sampling_params llama_sampling_params",
						"s": "",
						"u": "LLAMA_SAMPLING_PARAMS",
						"q": "",
						"w": "",
						"y": "llama_sampling_params",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "27228f106b284d84e07a900078871458d77131ef"
							}
						]
					},
					{
						"k": 2,
						"d": true,
						"iv": false,
						"is": false,
						"n": "llama_sampling_context",
						"t": "llama_sampling_context",
						"i": "llama_sampling_context",
						"r": "llama_sampling_context",
						"s": "",
						"u": "LLAMA_SAMPLING_CONTEXT",
						"q": "llama_sampling_context",
						"w": "LLAMA_SAMPLING_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6487d7a99dcd4c3f96c6e2033a1bea3d924e33bb"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "params",
						"t": "llama_sampling_params",
						"i": "llama_sampling_context::params",
						"r": "llama_sampling_params params",
						"s": "",
						"u": "PARAMS",
						"q": "llama_sampling_context",
						"w": "LLAMA_SAMPLING_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "c65954e0487969afaa2f9af8eb916554f4c7e8fc"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "mirostat_mu",
						"t": "float",
						"i": "llama_sampling_context::mirostat_mu",
						"r": "float mirostat_mu",
						"s": "",
						"u": "MIROSTAT_MU",
						"q": "llama_sampling_context",
						"w": "LLAMA_SAMPLING_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cc9165f2252c83d284db2a4c0c022dbc2c268b51"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "grammar",
						"t": "int *",
						"i": "llama_sampling_context::grammar",
						"r": "int *grammar",
						"s": "",
						"u": "GRAMMAR",
						"q": "llama_sampling_context",
						"w": "LLAMA_SAMPLING_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "85be26bbe83f9119940c4ca29c465fb9bacbf958"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "parsed_grammar",
						"t": "grammar_parser::parse_state",
						"i": "llama_sampling_context::parsed_grammar",
						"r": "grammar_parser::parse_state parsed_grammar",
						"s": "",
						"u": "PARSED_GRAMMAR",
						"q": "llama_sampling_context",
						"w": "LLAMA_SAMPLING_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2326440a80d6d617fc8b1b1961459e85185c63e"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "prev",
						"t": "int",
						"i": "llama_sampling_context::prev",
						"r": "int prev",
						"s": "",
						"u": "PREV",
						"q": "llama_sampling_context",
						"w": "LLAMA_SAMPLING_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "50f5d214dc50ead1d3491d3ee31c2efe1422a93d"
							}
						]
					},
					{
						"k": 6,
						"d": true,
						"iv": false,
						"is": false,
						"n": "cur",
						"t": "int",
						"i": "llama_sampling_context::cur",
						"r": "int cur",
						"s": "",
						"u": "CUR",
						"q": "llama_sampling_context",
						"w": "LLAMA_SAMPLING_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "6fbf65f8973223861bfff568c458ce9c96940f43"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_init",
						"t": "struct llama_sampling_context *(const struct llama_sampling_params &)",
						"i": "llama_sampling_init(const llama_sampling_params&)",
						"r": "llama_sampling_context *llama_sampling_init(const llama_sampling_params& params)",
						"s": "",
						"u": "LLAMA_SAMPLING_INIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "96a366c1b65a6d55541813119ecdced725bcc922"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_free",
						"t": "void (struct llama_sampling_context *)",
						"i": "llama_sampling_free(llama_sampling_context*)",
						"r": "void llama_sampling_free(llama_sampling_context *ctx)",
						"s": "",
						"u": "LLAMA_SAMPLING_FREE",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8cac000663a6b6fccd9c5049c8b6128a05089dee"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_reset",
						"t": "void (llama_sampling_context *)",
						"i": "llama_sampling_reset(llama_sampling_context*)",
						"r": "void llama_sampling_reset(llama_sampling_context *ctx)",
						"s": "",
						"u": "LLAMA_SAMPLING_RESET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "45b00acc0ffc1b8ce4ef0305cb4a138040d46eea"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_cp",
						"t": "void (llama_sampling_context *, llama_sampling_context *)",
						"i": "llama_sampling_cp(llama_sampling_context*,llama_sampling_context*)",
						"r": "void llama_sampling_cp(llama_sampling_context *src, llama_sampling_context *dst)",
						"s": "",
						"u": "LLAMA_SAMPLING_CP",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "cb5253b97a185bc07c0e514311c378e4161b32a6"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_last",
						"t": "int (llama_sampling_context *)",
						"i": "llama_sampling_last(llama_sampling_context*)",
						"r": "int llama_sampling_last(llama_sampling_context *ctx)",
						"s": "",
						"u": "LLAMA_SAMPLING_LAST",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "7dcde9e2f395b5f6b8b556e8075e7ba7905b4f55"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_prev_str",
						"t": "std::string (llama_sampling_context *, int *, int)",
						"i": "llama_sampling_prev_str(llama_sampling_context*,int*,int)",
						"r": "std::string llama_sampling_prev_str(llama_sampling_context *ctx_sampling, int *ctx_main, int n)",
						"s": "",
						"u": "LLAMA_SAMPLING_PREV_STR",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0dcf4d3bbd3324b331093aefc0f448945f8b81ac"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_print",
						"t": "std::string (const llama_sampling_params &)",
						"i": "llama_sampling_print(const llama_sampling_params&)",
						"r": "std::string llama_sampling_print(const llama_sampling_params& params)",
						"s": "",
						"u": "LLAMA_SAMPLING_PRINT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "ec090cdead11df9384f9b557ef3d7b187241dcb4"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_order_print",
						"t": "std::string (const llama_sampling_params &)",
						"i": "llama_sampling_order_print(const llama_sampling_params&)",
						"r": "std::string llama_sampling_order_print(const llama_sampling_params& params)",
						"s": "",
						"u": "LLAMA_SAMPLING_ORDER_PRINT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "d756cdfc9ae0cbd26df79f9216405ad478c4d501"
							}
						]
					},
					{
						"k": 8,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_sampling_accept",
						"t": "void (struct llama_sampling_context *, struct llama_context *, int, bool)",
						"i": "llama_sampling_accept(llama_sampling_context*,llama_context*,int,bool)",
						"r": "void llama_sampling_accept(llama_sampling_context *ctx_sampling, llama_context *ctx_main, int id, bool apply_grammar)",
						"s": "",
						"u": "LLAMA_SAMPLING_ACCEPT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f6c09b8170d64ef522a7cb0ca8dbc68f3b44dfb2"
							}
						]
					},
					{
						"k": 2,
						"d": false,
						"iv": false,
						"is": false,
						"n": "llama_context",
						"t": "llama_context",
						"i": "llama_context",
						"r": "llama_context",
						"s": "",
						"u": "LLAMA_CONTEXT",
						"q": "llama_context",
						"w": "LLAMA_CONTEXT",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "0e135deb3c12b9d675f3e6fa8c999cf2800b63b8"
							}
						]
					}
				]
			}
		},
		{
			"key": "LlamaCpp.cpp",
			"value": {
				"items": [
					{
						"k": 24,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LlamaCppResponse",
						"t": "void ()",
						"i": "LlamaCppResponse::LlamaCppResponse()",
						"r": "LlamaCppResponse()",
						"s": "",
						"u": "LLAMACPPRESPONSE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "8fedce778b1a0282a70095f202fa5b3b2e3400ac"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "Log",
						"t": "void (String)",
						"i": "LlamaCppResponse::Log(String)",
						"r": "void Log(String line)",
						"s": "",
						"u": "LOG",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "b10b63305cc66276afc7e546cd20b114f06d7b3f"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LogLine",
						"t": "void (String)",
						"i": "LlamaCppResponse::LogLine(String)",
						"r": "void LogLine(String line)",
						"s": "",
						"u": "LOGLINE",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "3f1585c99085dbaf2e8a4f43a7f0a8b9fcc641e5"
							}
						]
					},
					{
						"k": 21,
						"d": true,
						"iv": false,
						"is": false,
						"n": "SetThreadCount",
						"t": "void (int)",
						"i": "LlamaCppResponse::SetThreadCount(int)",
						"r": "void SetThreadCount(int n = -1)",
						"s": "",
						"u": "SETTHREADCOUNT",
						"q": "LlamaCppResponse",
						"w": "LLAMACPPRESPONSE",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "f3812639fcaa16c4386199780ffc14fe81cf8460"
							}
						]
					}
				]
			}
		},
		{
			"key": "build-info.cpp",
			"value": {
				"items": [
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LLAMA_BUILD_NUMBER",
						"t": "int",
						"i": "LLAMA_BUILD_NUMBER",
						"r": "int LLAMA_BUILD_NUMBER",
						"s": "",
						"u": "LLAMA_BUILD_NUMBER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "e2aa9fd0e5b314086e2d7a4d500e13d253fdce06"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LLAMA_COMMIT",
						"t": "const char *",
						"i": "LLAMA_COMMIT",
						"r": "const char *LLAMA_COMMIT",
						"s": "",
						"u": "LLAMA_COMMIT",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "4eb8862e7344063abbecb9158266a97c08cc5916"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LLAMA_COMPILER",
						"t": "const char *",
						"i": "LLAMA_COMPILER",
						"r": "const char *LLAMA_COMPILER",
						"s": "",
						"u": "LLAMA_COMPILER",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "2a37f9247a5019aecc2e219dd533d20b39dc9bc4"
							}
						]
					},
					{
						"k": 9,
						"d": true,
						"iv": false,
						"is": false,
						"n": "LLAMA_BUILD_TARGET",
						"t": "const char *",
						"i": "LLAMA_BUILD_TARGET",
						"r": "const char *LLAMA_BUILD_TARGET",
						"s": "",
						"u": "LLAMA_BUILD_TARGET",
						"q": "",
						"w": "",
						"y": "",
						"da": [

						],
						"sf": [
							{
								"items": [

								],
								"h": "32f8d67eaa69c42c84c28dec3fb3e5f17c1fd576"
							}
						]
					}
				]
			}
		}
	]
}